require.config({"config": {
        "jsbuild":{"Smartwave_Porto/js/jscolor.min.js":"/**\r\n * jscolor - JavaScript Color Picker\r\n *\r\n * @link    http://jscolor.com\r\n * @license For open source use: GPLv3\r\n *          For commercial use: JSColor Commercial License\r\n * @author  Jan Odvarko\r\n * @version 2.0.4\r\n *\r\n * See usage examples at http://jscolor.com/examples/\r\n */\r\n\r\n\r\n\"use strict\";\r\n\r\n\r\nif (!window.jscolor) { window.jscolor = (function () {\r\n\r\n\r\nvar jsc = {\r\n\r\n\r\n    register : function () {\r\n        jsc.attachDOMReadyEvent(jsc.init);\r\n        jsc.attachEvent(document, 'mousedown', jsc.onDocumentMouseDown);\r\n        jsc.attachEvent(document, 'touchstart', jsc.onDocumentTouchStart);\r\n        jsc.attachEvent(window, 'resize', jsc.onWindowResize);\r\n    },\r\n\r\n\r\n    init : function () {\r\n        if (jsc.jscolor.lookupClass) {\r\n            jsc.jscolor.installByClassName(jsc.jscolor.lookupClass);\r\n        }\r\n    },\r\n\r\n\r\n    tryInstallOnElements : function (elms, className) {\r\n        var matchClass = new RegExp('(^|\\\\s)(' + className + ')(\\\\s*(\\\\{[^}]*\\\\})|\\\\s|$)', 'i');\r\n\r\n        for (var i = 0; i < elms.length; i += 1) {\r\n            if (elms[i].type !== undefined && elms[i].type.toLowerCase() == 'color') {\r\n                if (jsc.isColorAttrSupported) {\r\n                    // skip inputs of type 'color' if supported by the browser\r\n                    continue;\r\n                }\r\n            }\r\n            var m;\r\n            if (!elms[i].jscolor && elms[i].className && (m = elms[i].className.match(matchClass))) {\r\n                var targetElm = elms[i];\r\n                var optsStr = null;\r\n\r\n                var dataOptions = jsc.getDataAttr(targetElm, 'jscolor');\r\n                if (dataOptions !== null) {\r\n                    optsStr = dataOptions;\r\n                } else if (m[4]) {\r\n                    optsStr = m[4];\r\n                }\r\n\r\n                var opts = {};\r\n                if (optsStr) {\r\n                    try {\r\n                        opts = (new Function ('return (' + optsStr + ')'))();\r\n                    } catch(eParseError) {\r\n                        jsc.warn('Error parsing jscolor options: ' + eParseError + ':\\n' + optsStr);\r\n                    }\r\n                }\r\n                targetElm.jscolor = new jsc.jscolor(targetElm, opts);\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    isColorAttrSupported : (function () {\r\n        var elm = document.createElement('input');\r\n        if (elm.setAttribute) {\r\n            elm.setAttribute('type', 'color');\r\n            if (elm.type.toLowerCase() == 'color') {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    })(),\r\n\r\n\r\n    isCanvasSupported : (function () {\r\n        var elm = document.createElement('canvas');\r\n        return !!(elm.getContext && elm.getContext('2d'));\r\n    })(),\r\n\r\n\r\n    fetchElement : function (mixed) {\r\n        return typeof mixed === 'string' ? document.getElementById(mixed) : mixed;\r\n    },\r\n\r\n\r\n    isElementType : function (elm, type) {\r\n        return elm.nodeName.toLowerCase() === type.toLowerCase();\r\n    },\r\n\r\n\r\n    getDataAttr : function (el, name) {\r\n        var attrName = 'data-' + name;\r\n        var attrValue = el.getAttribute(attrName);\r\n        if (attrValue !== null) {\r\n            return attrValue;\r\n        }\r\n        return null;\r\n    },\r\n\r\n\r\n    attachEvent : function (el, evnt, func) {\r\n        if (el.addEventListener) {\r\n            el.addEventListener(evnt, func, false);\r\n        } else if (el.attachEvent) {\r\n            el.attachEvent('on' + evnt, func);\r\n        }\r\n    },\r\n\r\n\r\n    detachEvent : function (el, evnt, func) {\r\n        if (el.removeEventListener) {\r\n            el.removeEventListener(evnt, func, false);\r\n        } else if (el.detachEvent) {\r\n            el.detachEvent('on' + evnt, func);\r\n        }\r\n    },\r\n\r\n\r\n    _attachedGroupEvents : {},\r\n\r\n\r\n    attachGroupEvent : function (groupName, el, evnt, func) {\r\n        if (!jsc._attachedGroupEvents.hasOwnProperty(groupName)) {\r\n            jsc._attachedGroupEvents[groupName] = [];\r\n        }\r\n        jsc._attachedGroupEvents[groupName].push([el, evnt, func]);\r\n        jsc.attachEvent(el, evnt, func);\r\n    },\r\n\r\n\r\n    detachGroupEvents : function (groupName) {\r\n        if (jsc._attachedGroupEvents.hasOwnProperty(groupName)) {\r\n            for (var i = 0; i < jsc._attachedGroupEvents[groupName].length; i += 1) {\r\n                var evt = jsc._attachedGroupEvents[groupName][i];\r\n                jsc.detachEvent(evt[0], evt[1], evt[2]);\r\n            }\r\n            delete jsc._attachedGroupEvents[groupName];\r\n        }\r\n    },\r\n\r\n\r\n    attachDOMReadyEvent : function (func) {\r\n        var fired = false;\r\n        var fireOnce = function () {\r\n            if (!fired) {\r\n                fired = true;\r\n                func();\r\n            }\r\n        };\r\n\r\n        if (document.readyState === 'complete') {\r\n            setTimeout(fireOnce, 1); // async\r\n            return;\r\n        }\r\n\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', fireOnce, false);\r\n\r\n            // Fallback\r\n            window.addEventListener('load', fireOnce, false);\r\n\r\n        } else if (document.attachEvent) {\r\n            // IE\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete') {\r\n                    document.detachEvent('onreadystatechange', arguments.callee);\r\n                    fireOnce();\r\n                }\r\n            })\r\n\r\n            // Fallback\r\n            window.attachEvent('onload', fireOnce);\r\n\r\n            // IE7/8\r\n            if (document.documentElement.doScroll && window == window.top) {\r\n                var tryScroll = function () {\r\n                    if (!document.body) { return; }\r\n                    try {\r\n                        document.documentElement.doScroll('left');\r\n                        fireOnce();\r\n                    } catch (e) {\r\n                        setTimeout(tryScroll, 1);\r\n                    }\r\n                };\r\n                tryScroll();\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    warn : function (msg) {\r\n        if (window.console && window.console.warn) {\r\n            window.console.warn(msg);\r\n        }\r\n    },\r\n\r\n\r\n    preventDefault : function (e) {\r\n        if (e.preventDefault) { e.preventDefault(); }\r\n        e.returnValue = false;\r\n    },\r\n\r\n\r\n    captureTarget : function (target) {\r\n        // IE\r\n        if (target.setCapture) {\r\n            jsc._capturedTarget = target;\r\n            jsc._capturedTarget.setCapture();\r\n        }\r\n    },\r\n\r\n\r\n    releaseTarget : function () {\r\n        // IE\r\n        if (jsc._capturedTarget) {\r\n            jsc._capturedTarget.releaseCapture();\r\n            jsc._capturedTarget = null;\r\n        }\r\n    },\r\n\r\n\r\n    fireEvent : function (el, evnt) {\r\n        if (!el) {\r\n            return;\r\n        }\r\n        if (document.createEvent) {\r\n            var ev = document.createEvent('HTMLEvents');\r\n            ev.initEvent(evnt, true, true);\r\n            el.dispatchEvent(ev);\r\n        } else if (document.createEventObject) {\r\n            var ev = document.createEventObject();\r\n            el.fireEvent('on' + evnt, ev);\r\n        } else if (el['on' + evnt]) { // alternatively use the traditional event model\r\n            el['on' + evnt]();\r\n        }\r\n    },\r\n\r\n\r\n    classNameToList : function (className) {\r\n        return className.replace(/^\\s+|\\s+$/g, '').split(/\\s+/);\r\n    },\r\n\r\n\r\n    // The className parameter (str) can only contain a single class name\r\n    hasClass : function (elm, className) {\r\n        if (!className) {\r\n            return false;\r\n        }\r\n        return -1 != (' ' + elm.className.replace(/\\s+/g, ' ') + ' ').indexOf(' ' + className + ' ');\r\n    },\r\n\r\n\r\n    // The className parameter (str) can contain multiple class names separated by whitespace\r\n    setClass : function (elm, className) {\r\n        var classList = jsc.classNameToList(className);\r\n        for (var i = 0; i < classList.length; i += 1) {\r\n            if (!jsc.hasClass(elm, classList[i])) {\r\n                elm.className += (elm.className ? ' ' : '') + classList[i];\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    // The className parameter (str) can contain multiple class names separated by whitespace\r\n    unsetClass : function (elm, className) {\r\n        var classList = jsc.classNameToList(className);\r\n        for (var i = 0; i < classList.length; i += 1) {\r\n            var repl = new RegExp(\r\n                '^\\\\s*' + classList[i] + '\\\\s*|' +\r\n                '\\\\s*' + classList[i] + '\\\\s*$|' +\r\n                '\\\\s+' + classList[i] + '(\\\\s+)',\r\n                'g'\r\n            );\r\n            elm.className = elm.className.replace(repl, '$1');\r\n        }\r\n    },\r\n\r\n\r\n    getStyle : function (elm) {\r\n        return window.getComputedStyle ? window.getComputedStyle(elm) : elm.currentStyle;\r\n    },\r\n\r\n\r\n    setStyle : (function () {\r\n        var helper = document.createElement('div');\r\n        var getSupportedProp = function (names) {\r\n            for (var i = 0; i < names.length; i += 1) {\r\n                if (names[i] in helper.style) {\r\n                    return names[i];\r\n                }\r\n            }\r\n        };\r\n        var props = {\r\n            borderRadius: getSupportedProp(['borderRadius', 'MozBorderRadius', 'webkitBorderRadius']),\r\n            boxShadow: getSupportedProp(['boxShadow', 'MozBoxShadow', 'webkitBoxShadow'])\r\n        };\r\n        return function (elm, prop, value) {\r\n            switch (prop.toLowerCase()) {\r\n            case 'opacity':\r\n                var alphaOpacity = Math.round(parseFloat(value) * 100);\r\n                elm.style.opacity = value;\r\n                elm.style.filter = 'alpha(opacity=' + alphaOpacity + ')';\r\n                break;\r\n            default:\r\n                elm.style[props[prop]] = value;\r\n                break;\r\n            }\r\n        };\r\n    })(),\r\n\r\n\r\n    setBorderRadius : function (elm, value) {\r\n        jsc.setStyle(elm, 'borderRadius', value || '0');\r\n    },\r\n\r\n\r\n    setBoxShadow : function (elm, value) {\r\n        jsc.setStyle(elm, 'boxShadow', value || 'none');\r\n    },\r\n\r\n\r\n    getElementPos : function (e, relativeToViewport) {\r\n        var x=0, y=0;\r\n        var rect = e.getBoundingClientRect();\r\n        x = rect.left;\r\n        y = rect.top;\r\n        if (!relativeToViewport) {\r\n            var viewPos = jsc.getViewPos();\r\n            x += viewPos[0];\r\n            y += viewPos[1];\r\n        }\r\n        return [x, y];\r\n    },\r\n\r\n\r\n    getElementSize : function (e) {\r\n        return [e.offsetWidth, e.offsetHeight];\r\n    },\r\n\r\n\r\n    // get pointer's X/Y coordinates relative to viewport\r\n    getAbsPointerPos : function (e) {\r\n        if (!e) { e = window.event; }\r\n        var x = 0, y = 0;\r\n        if (typeof e.changedTouches !== 'undefined' && e.changedTouches.length) {\r\n            // touch devices\r\n            x = e.changedTouches[0].clientX;\r\n            y = e.changedTouches[0].clientY;\r\n        } else if (typeof e.clientX === 'number') {\r\n            x = e.clientX;\r\n            y = e.clientY;\r\n        }\r\n        return { x: x, y: y };\r\n    },\r\n\r\n\r\n    // get pointer's X/Y coordinates relative to target element\r\n    getRelPointerPos : function (e) {\r\n        if (!e) { e = window.event; }\r\n        var target = e.target || e.srcElement;\r\n        var targetRect = target.getBoundingClientRect();\r\n\r\n        var x = 0, y = 0;\r\n\r\n        var clientX = 0, clientY = 0;\r\n        if (typeof e.changedTouches !== 'undefined' && e.changedTouches.length) {\r\n            // touch devices\r\n            clientX = e.changedTouches[0].clientX;\r\n            clientY = e.changedTouches[0].clientY;\r\n        } else if (typeof e.clientX === 'number') {\r\n            clientX = e.clientX;\r\n            clientY = e.clientY;\r\n        }\r\n\r\n        x = clientX - targetRect.left;\r\n        y = clientY - targetRect.top;\r\n        return { x: x, y: y };\r\n    },\r\n\r\n\r\n    getViewPos : function () {\r\n        var doc = document.documentElement;\r\n        return [\r\n            (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0),\r\n            (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0)\r\n        ];\r\n    },\r\n\r\n\r\n    getViewSize : function () {\r\n        var doc = document.documentElement;\r\n        return [\r\n            (window.innerWidth || doc.clientWidth),\r\n            (window.innerHeight || doc.clientHeight),\r\n        ];\r\n    },\r\n\r\n\r\n    redrawPosition : function () {\r\n\r\n        if (jsc.picker && jsc.picker.owner) {\r\n            var thisObj = jsc.picker.owner;\r\n\r\n            var tp, vp;\r\n\r\n            if (thisObj.fixed) {\r\n                // Fixed elements are positioned relative to viewport,\r\n                // therefore we can ignore the scroll offset\r\n                tp = jsc.getElementPos(thisObj.targetElement, true); // target pos\r\n                vp = [0, 0]; // view pos\r\n            } else {\r\n                tp = jsc.getElementPos(thisObj.targetElement); // target pos\r\n                vp = jsc.getViewPos(); // view pos\r\n            }\r\n\r\n            var ts = jsc.getElementSize(thisObj.targetElement); // target size\r\n            var vs = jsc.getViewSize(); // view size\r\n            var ps = jsc.getPickerOuterDims(thisObj); // picker size\r\n            var a, b, c;\r\n            switch (thisObj.position.toLowerCase()) {\r\n                case 'left': a=1; b=0; c=-1; break;\r\n                case 'right':a=1; b=0; c=1; break;\r\n                case 'top':  a=0; b=1; c=-1; break;\r\n                default:     a=0; b=1; c=1; break;\r\n            }\r\n            var l = (ts[b]+ps[b])/2;\r\n\r\n            // compute picker position\r\n            if (!thisObj.smartPosition) {\r\n                var pp = [\r\n                    tp[a],\r\n                    tp[b]+ts[b]-l+l*c\r\n                ];\r\n            } else {\r\n                var pp = [\r\n                    -vp[a]+tp[a]+ps[a] > vs[a] ?\r\n                        (-vp[a]+tp[a]+ts[a]/2 > vs[a]/2 && tp[a]+ts[a]-ps[a] >= 0 ? tp[a]+ts[a]-ps[a] : tp[a]) :\r\n                        tp[a],\r\n                    -vp[b]+tp[b]+ts[b]+ps[b]-l+l*c > vs[b] ?\r\n                        (-vp[b]+tp[b]+ts[b]/2 > vs[b]/2 && tp[b]+ts[b]-l-l*c >= 0 ? tp[b]+ts[b]-l-l*c : tp[b]+ts[b]-l+l*c) :\r\n                        (tp[b]+ts[b]-l+l*c >= 0 ? tp[b]+ts[b]-l+l*c : tp[b]+ts[b]-l-l*c)\r\n                ];\r\n            }\r\n\r\n            var x = pp[a];\r\n            var y = pp[b];\r\n            var positionValue = thisObj.fixed ? 'fixed' : 'absolute';\r\n            var contractShadow =\r\n                (pp[0] + ps[0] > tp[0] || pp[0] < tp[0] + ts[0]) &&\r\n                (pp[1] + ps[1] < tp[1] + ts[1]);\r\n\r\n            jsc._drawPosition(thisObj, x, y, positionValue, contractShadow);\r\n        }\r\n    },\r\n\r\n\r\n    _drawPosition : function (thisObj, x, y, positionValue, contractShadow) {\r\n        var vShadow = contractShadow ? 0 : thisObj.shadowBlur; // px\r\n\r\n        jsc.picker.wrap.style.position = positionValue;\r\n        jsc.picker.wrap.style.left = x + 'px';\r\n        jsc.picker.wrap.style.top = y + 'px';\r\n\r\n        jsc.setBoxShadow(\r\n            jsc.picker.boxS,\r\n            thisObj.shadow ?\r\n                new jsc.BoxShadow(0, vShadow, thisObj.shadowBlur, 0, thisObj.shadowColor) :\r\n                null);\r\n    },\r\n\r\n\r\n    getPickerDims : function (thisObj) {\r\n        var displaySlider = !!jsc.getSliderComponent(thisObj);\r\n        var dims = [\r\n            2 * thisObj.insetWidth + 2 * thisObj.padding + thisObj.width +\r\n                (displaySlider ? 2 * thisObj.insetWidth + jsc.getPadToSliderPadding(thisObj) + thisObj.sliderSize : 0),\r\n            2 * thisObj.insetWidth + 2 * thisObj.padding + thisObj.height +\r\n                (thisObj.closable ? 2 * thisObj.insetWidth + thisObj.padding + thisObj.buttonHeight : 0)\r\n        ];\r\n        return dims;\r\n    },\r\n\r\n\r\n    getPickerOuterDims : function (thisObj) {\r\n        var dims = jsc.getPickerDims(thisObj);\r\n        return [\r\n            dims[0] + 2 * thisObj.borderWidth,\r\n            dims[1] + 2 * thisObj.borderWidth\r\n        ];\r\n    },\r\n\r\n\r\n    getPadToSliderPadding : function (thisObj) {\r\n        return Math.max(thisObj.padding, 1.5 * (2 * thisObj.pointerBorderWidth + thisObj.pointerThickness));\r\n    },\r\n\r\n\r\n    getPadYComponent : function (thisObj) {\r\n        switch (thisObj.mode.charAt(1).toLowerCase()) {\r\n            case 'v': return 'v'; break;\r\n        }\r\n        return 's';\r\n    },\r\n\r\n\r\n    getSliderComponent : function (thisObj) {\r\n        if (thisObj.mode.length > 2) {\r\n            switch (thisObj.mode.charAt(2).toLowerCase()) {\r\n                case 's': return 's'; break;\r\n                case 'v': return 'v'; break;\r\n            }\r\n        }\r\n        return null;\r\n    },\r\n\r\n\r\n    onDocumentMouseDown : function (e) {\r\n        if (!e) { e = window.event; }\r\n        var target = e.target || e.srcElement;\r\n\r\n        if (target._jscLinkedInstance) {\r\n            if (target._jscLinkedInstance.showOnClick) {\r\n                target._jscLinkedInstance.show();\r\n            }\r\n        } else if (target._jscControlName) {\r\n            jsc.onControlPointerStart(e, target, target._jscControlName, 'mouse');\r\n        } else {\r\n            // Mouse is outside the picker controls -> hide the color picker!\r\n            if (jsc.picker && jsc.picker.owner) {\r\n                jsc.picker.owner.hide();\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    onDocumentTouchStart : function (e) {\r\n        if (!e) { e = window.event; }\r\n        var target = e.target || e.srcElement;\r\n\r\n        if (target._jscLinkedInstance) {\r\n            if (target._jscLinkedInstance.showOnClick) {\r\n                target._jscLinkedInstance.show();\r\n            }\r\n        } else if (target._jscControlName) {\r\n            jsc.onControlPointerStart(e, target, target._jscControlName, 'touch');\r\n        } else {\r\n            if (jsc.picker && jsc.picker.owner) {\r\n                jsc.picker.owner.hide();\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    onWindowResize : function (e) {\r\n        jsc.redrawPosition();\r\n    },\r\n\r\n\r\n    onParentScroll : function (e) {\r\n        // hide the picker when one of the parent elements is scrolled\r\n        if (jsc.picker && jsc.picker.owner) {\r\n            jsc.picker.owner.hide();\r\n        }\r\n    },\r\n\r\n\r\n    _pointerMoveEvent : {\r\n        mouse: 'mousemove',\r\n        touch: 'touchmove'\r\n    },\r\n    _pointerEndEvent : {\r\n        mouse: 'mouseup',\r\n        touch: 'touchend'\r\n    },\r\n\r\n\r\n    _pointerOrigin : null,\r\n    _capturedTarget : null,\r\n\r\n\r\n    onControlPointerStart : function (e, target, controlName, pointerType) {\r\n        var thisObj = target._jscInstance;\r\n\r\n        jsc.preventDefault(e);\r\n        jsc.captureTarget(target);\r\n\r\n        var registerDragEvents = function (doc, offset) {\r\n            jsc.attachGroupEvent('drag', doc, jsc._pointerMoveEvent[pointerType],\r\n                jsc.onDocumentPointerMove(e, target, controlName, pointerType, offset));\r\n            jsc.attachGroupEvent('drag', doc, jsc._pointerEndEvent[pointerType],\r\n                jsc.onDocumentPointerEnd(e, target, controlName, pointerType));\r\n        };\r\n\r\n        registerDragEvents(document, [0, 0]);\r\n\r\n        if (window.parent && window.frameElement) {\r\n            var rect = window.frameElement.getBoundingClientRect();\r\n            var ofs = [-rect.left, -rect.top];\r\n            registerDragEvents(window.parent.window.document, ofs);\r\n        }\r\n\r\n        var abs = jsc.getAbsPointerPos(e);\r\n        var rel = jsc.getRelPointerPos(e);\r\n        jsc._pointerOrigin = {\r\n            x: abs.x - rel.x,\r\n            y: abs.y - rel.y\r\n        };\r\n\r\n        switch (controlName) {\r\n        case 'pad':\r\n            // if the slider is at the bottom, move it up\r\n            switch (jsc.getSliderComponent(thisObj)) {\r\n            case 's': if (thisObj.hsv[1] === 0) { thisObj.fromHSV(null, 100, null); }; break;\r\n            case 'v': if (thisObj.hsv[2] === 0) { thisObj.fromHSV(null, null, 100); }; break;\r\n            }\r\n            jsc.setPad(thisObj, e, 0, 0);\r\n            break;\r\n\r\n        case 'sld':\r\n            jsc.setSld(thisObj, e, 0);\r\n            break;\r\n        }\r\n\r\n        jsc.dispatchFineChange(thisObj);\r\n    },\r\n\r\n\r\n    onDocumentPointerMove : function (e, target, controlName, pointerType, offset) {\r\n        return function (e) {\r\n            var thisObj = target._jscInstance;\r\n            switch (controlName) {\r\n            case 'pad':\r\n                if (!e) { e = window.event; }\r\n                jsc.setPad(thisObj, e, offset[0], offset[1]);\r\n                jsc.dispatchFineChange(thisObj);\r\n                break;\r\n\r\n            case 'sld':\r\n                if (!e) { e = window.event; }\r\n                jsc.setSld(thisObj, e, offset[1]);\r\n                jsc.dispatchFineChange(thisObj);\r\n                break;\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    onDocumentPointerEnd : function (e, target, controlName, pointerType) {\r\n        return function (e) {\r\n            var thisObj = target._jscInstance;\r\n            jsc.detachGroupEvents('drag');\r\n            jsc.releaseTarget();\r\n            // Always dispatch changes after detaching outstanding mouse handlers,\r\n            // in case some user interaction will occur in user's onchange callback\r\n            // that would intrude with current mouse events\r\n            jsc.dispatchChange(thisObj);\r\n        };\r\n    },\r\n\r\n\r\n    dispatchChange : function (thisObj) {\r\n        if (thisObj.valueElement) {\r\n            if (jsc.isElementType(thisObj.valueElement, 'input')) {\r\n                jsc.fireEvent(thisObj.valueElement, 'change');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    dispatchFineChange : function (thisObj) {\r\n        if (thisObj.onFineChange) {\r\n            var callback;\r\n            if (typeof thisObj.onFineChange === 'string') {\r\n                callback = new Function (thisObj.onFineChange);\r\n            } else {\r\n                callback = thisObj.onFineChange;\r\n            }\r\n            callback.call(thisObj);\r\n        }\r\n    },\r\n\r\n\r\n    setPad : function (thisObj, e, ofsX, ofsY) {\r\n        var pointerAbs = jsc.getAbsPointerPos(e);\r\n        var x = ofsX + pointerAbs.x - jsc._pointerOrigin.x - thisObj.padding - thisObj.insetWidth;\r\n        var y = ofsY + pointerAbs.y - jsc._pointerOrigin.y - thisObj.padding - thisObj.insetWidth;\r\n\r\n        var xVal = x * (360 / (thisObj.width - 1));\r\n        var yVal = 100 - (y * (100 / (thisObj.height - 1)));\r\n\r\n        switch (jsc.getPadYComponent(thisObj)) {\r\n        case 's': thisObj.fromHSV(xVal, yVal, null, jsc.leaveSld); break;\r\n        case 'v': thisObj.fromHSV(xVal, null, yVal, jsc.leaveSld); break;\r\n        }\r\n    },\r\n\r\n\r\n    setSld : function (thisObj, e, ofsY) {\r\n        var pointerAbs = jsc.getAbsPointerPos(e);\r\n        var y = ofsY + pointerAbs.y - jsc._pointerOrigin.y - thisObj.padding - thisObj.insetWidth;\r\n\r\n        var yVal = 100 - (y * (100 / (thisObj.height - 1)));\r\n\r\n        switch (jsc.getSliderComponent(thisObj)) {\r\n        case 's': thisObj.fromHSV(null, yVal, null, jsc.leavePad); break;\r\n        case 'v': thisObj.fromHSV(null, null, yVal, jsc.leavePad); break;\r\n        }\r\n    },\r\n\r\n\r\n    _vmlNS : 'jsc_vml_',\r\n    _vmlCSS : 'jsc_vml_css_',\r\n    _vmlReady : false,\r\n\r\n\r\n    initVML : function () {\r\n        if (!jsc._vmlReady) {\r\n            // init VML namespace\r\n            var doc = document;\r\n            if (!doc.namespaces[jsc._vmlNS]) {\r\n                doc.namespaces.add(jsc._vmlNS, 'urn:schemas-microsoft-com:vml');\r\n            }\r\n            if (!doc.styleSheets[jsc._vmlCSS]) {\r\n                var tags = ['shape', 'shapetype', 'group', 'background', 'path', 'formulas', 'handles', 'fill', 'stroke', 'shadow', 'textbox', 'textpath', 'imagedata', 'line', 'polyline', 'curve', 'rect', 'roundrect', 'oval', 'arc', 'image'];\r\n                var ss = doc.createStyleSheet();\r\n                ss.owningElement.id = jsc._vmlCSS;\r\n                for (var i = 0; i < tags.length; i += 1) {\r\n                    ss.addRule(jsc._vmlNS + '\\\\:' + tags[i], 'behavior:url(#default#VML);');\r\n                }\r\n            }\r\n            jsc._vmlReady = true;\r\n        }\r\n    },\r\n\r\n\r\n    createPalette : function () {\r\n\r\n        var paletteObj = {\r\n            elm: null,\r\n            draw: null\r\n        };\r\n\r\n        if (jsc.isCanvasSupported) {\r\n            // Canvas implementation for modern browsers\r\n\r\n            var canvas = document.createElement('canvas');\r\n            var ctx = canvas.getContext('2d');\r\n\r\n            var drawFunc = function (width, height, type) {\r\n                canvas.width = width;\r\n                canvas.height = height;\r\n\r\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n                var hGrad = ctx.createLinearGradient(0, 0, canvas.width, 0);\r\n                hGrad.addColorStop(0 / 6, '#F00');\r\n                hGrad.addColorStop(1 / 6, '#FF0');\r\n                hGrad.addColorStop(2 / 6, '#0F0');\r\n                hGrad.addColorStop(3 / 6, '#0FF');\r\n                hGrad.addColorStop(4 / 6, '#00F');\r\n                hGrad.addColorStop(5 / 6, '#F0F');\r\n                hGrad.addColorStop(6 / 6, '#F00');\r\n\r\n                ctx.fillStyle = hGrad;\r\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n                var vGrad = ctx.createLinearGradient(0, 0, 0, canvas.height);\r\n                switch (type.toLowerCase()) {\r\n                case 's':\r\n                    vGrad.addColorStop(0, 'rgba(255,255,255,0)');\r\n                    vGrad.addColorStop(1, 'rgba(255,255,255,1)');\r\n                    break;\r\n                case 'v':\r\n                    vGrad.addColorStop(0, 'rgba(0,0,0,0)');\r\n                    vGrad.addColorStop(1, 'rgba(0,0,0,1)');\r\n                    break;\r\n                }\r\n                ctx.fillStyle = vGrad;\r\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n            };\r\n\r\n            paletteObj.elm = canvas;\r\n            paletteObj.draw = drawFunc;\r\n\r\n        } else {\r\n            // VML fallback for IE 7 and 8\r\n\r\n            jsc.initVML();\r\n\r\n            var vmlContainer = document.createElement('div');\r\n            vmlContainer.style.position = 'relative';\r\n            vmlContainer.style.overflow = 'hidden';\r\n\r\n            var hGrad = document.createElement(jsc._vmlNS + ':fill');\r\n            hGrad.type = 'gradient';\r\n            hGrad.method = 'linear';\r\n            hGrad.angle = '90';\r\n            hGrad.colors = '16.67% #F0F, 33.33% #00F, 50% #0FF, 66.67% #0F0, 83.33% #FF0'\r\n\r\n            var hRect = document.createElement(jsc._vmlNS + ':rect');\r\n            hRect.style.position = 'absolute';\r\n            hRect.style.left = -1 + 'px';\r\n            hRect.style.top = -1 + 'px';\r\n            hRect.stroked = false;\r\n            hRect.appendChild(hGrad);\r\n            vmlContainer.appendChild(hRect);\r\n\r\n            var vGrad = document.createElement(jsc._vmlNS + ':fill');\r\n            vGrad.type = 'gradient';\r\n            vGrad.method = 'linear';\r\n            vGrad.angle = '180';\r\n            vGrad.opacity = '0';\r\n\r\n            var vRect = document.createElement(jsc._vmlNS + ':rect');\r\n            vRect.style.position = 'absolute';\r\n            vRect.style.left = -1 + 'px';\r\n            vRect.style.top = -1 + 'px';\r\n            vRect.stroked = false;\r\n            vRect.appendChild(vGrad);\r\n            vmlContainer.appendChild(vRect);\r\n\r\n            var drawFunc = function (width, height, type) {\r\n                vmlContainer.style.width = width + 'px';\r\n                vmlContainer.style.height = height + 'px';\r\n\r\n                hRect.style.width =\r\n                vRect.style.width =\r\n                    (width + 1) + 'px';\r\n                hRect.style.height =\r\n                vRect.style.height =\r\n                    (height + 1) + 'px';\r\n\r\n                // Colors must be specified during every redraw, otherwise IE won't display\r\n                // a full gradient during a subsequential redraw\r\n                hGrad.color = '#F00';\r\n                hGrad.color2 = '#F00';\r\n\r\n                switch (type.toLowerCase()) {\r\n                case 's':\r\n                    vGrad.color = vGrad.color2 = '#FFF';\r\n                    break;\r\n                case 'v':\r\n                    vGrad.color = vGrad.color2 = '#000';\r\n                    break;\r\n                }\r\n            };\r\n            \r\n            paletteObj.elm = vmlContainer;\r\n            paletteObj.draw = drawFunc;\r\n        }\r\n\r\n        return paletteObj;\r\n    },\r\n\r\n\r\n    createSliderGradient : function () {\r\n\r\n        var sliderObj = {\r\n            elm: null,\r\n            draw: null\r\n        };\r\n\r\n        if (jsc.isCanvasSupported) {\r\n            // Canvas implementation for modern browsers\r\n\r\n            var canvas = document.createElement('canvas');\r\n            var ctx = canvas.getContext('2d');\r\n\r\n            var drawFunc = function (width, height, color1, color2) {\r\n                canvas.width = width;\r\n                canvas.height = height;\r\n\r\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n                var grad = ctx.createLinearGradient(0, 0, 0, canvas.height);\r\n                grad.addColorStop(0, color1);\r\n                grad.addColorStop(1, color2);\r\n\r\n                ctx.fillStyle = grad;\r\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n            };\r\n\r\n            sliderObj.elm = canvas;\r\n            sliderObj.draw = drawFunc;\r\n\r\n        } else {\r\n            // VML fallback for IE 7 and 8\r\n\r\n            jsc.initVML();\r\n\r\n            var vmlContainer = document.createElement('div');\r\n            vmlContainer.style.position = 'relative';\r\n            vmlContainer.style.overflow = 'hidden';\r\n\r\n            var grad = document.createElement(jsc._vmlNS + ':fill');\r\n            grad.type = 'gradient';\r\n            grad.method = 'linear';\r\n            grad.angle = '180';\r\n\r\n            var rect = document.createElement(jsc._vmlNS + ':rect');\r\n            rect.style.position = 'absolute';\r\n            rect.style.left = -1 + 'px';\r\n            rect.style.top = -1 + 'px';\r\n            rect.stroked = false;\r\n            rect.appendChild(grad);\r\n            vmlContainer.appendChild(rect);\r\n\r\n            var drawFunc = function (width, height, color1, color2) {\r\n                vmlContainer.style.width = width + 'px';\r\n                vmlContainer.style.height = height + 'px';\r\n\r\n                rect.style.width = (width + 1) + 'px';\r\n                rect.style.height = (height + 1) + 'px';\r\n\r\n                grad.color = color1;\r\n                grad.color2 = color2;\r\n            };\r\n            \r\n            sliderObj.elm = vmlContainer;\r\n            sliderObj.draw = drawFunc;\r\n        }\r\n\r\n        return sliderObj;\r\n    },\r\n\r\n\r\n    leaveValue : 1<<0,\r\n    leaveStyle : 1<<1,\r\n    leavePad : 1<<2,\r\n    leaveSld : 1<<3,\r\n\r\n\r\n    BoxShadow : (function () {\r\n        var BoxShadow = function (hShadow, vShadow, blur, spread, color, inset) {\r\n            this.hShadow = hShadow;\r\n            this.vShadow = vShadow;\r\n            this.blur = blur;\r\n            this.spread = spread;\r\n            this.color = color;\r\n            this.inset = !!inset;\r\n        };\r\n\r\n        BoxShadow.prototype.toString = function () {\r\n            var vals = [\r\n                Math.round(this.hShadow) + 'px',\r\n                Math.round(this.vShadow) + 'px',\r\n                Math.round(this.blur) + 'px',\r\n                Math.round(this.spread) + 'px',\r\n                this.color\r\n            ];\r\n            if (this.inset) {\r\n                vals.push('inset');\r\n            }\r\n            return vals.join(' ');\r\n        };\r\n\r\n        return BoxShadow;\r\n    })(),\r\n\r\n\r\n    //\r\n    // Usage:\r\n    // var myColor = new jscolor(<targetElement> [, <options>])\r\n    //\r\n\r\n    jscolor : function (targetElement, options) {\r\n\r\n        // General options\r\n        //\r\n        this.value = null; // initial HEX color. To change it later, use methods fromString(), fromHSV() and fromRGB()\r\n        this.valueElement = targetElement; // element that will be used to display and input the color code\r\n        this.styleElement = targetElement; // element that will preview the picked color using CSS backgroundColor\r\n        this.required = true; // whether the associated text <input> can be left empty\r\n        this.refine = true; // whether to refine the entered color code (e.g. uppercase it and remove whitespace)\r\n        this.hash = false; // whether to prefix the HEX color code with # symbol\r\n        this.uppercase = true; // whether to uppercase the color code\r\n        this.onFineChange = null; // called instantly every time the color changes (value can be either a function or a string with javascript code)\r\n        this.activeClass = 'jscolor-active'; // class to be set to the target element when a picker window is open on it\r\n        this.minS = 0; // min allowed saturation (0 - 100)\r\n        this.maxS = 100; // max allowed saturation (0 - 100)\r\n        this.minV = 0; // min allowed value (brightness) (0 - 100)\r\n        this.maxV = 100; // max allowed value (brightness) (0 - 100)\r\n\r\n        // Accessing the picked color\r\n        //\r\n        this.hsv = [0, 0, 100]; // read-only  [0-360, 0-100, 0-100]\r\n        this.rgb = [255, 255, 255]; // read-only  [0-255, 0-255, 0-255]\r\n\r\n        // Color Picker options\r\n        //\r\n        this.width = 181; // width of color palette (in px)\r\n        this.height = 101; // height of color palette (in px)\r\n        this.showOnClick = true; // whether to display the color picker when user clicks on its target element\r\n        this.mode = 'HSV'; // HSV | HVS | HS | HV - layout of the color picker controls\r\n        this.position = 'bottom'; // left | right | top | bottom - position relative to the target element\r\n        this.smartPosition = true; // automatically change picker position when there is not enough space for it\r\n        this.sliderSize = 16; // px\r\n        this.crossSize = 8; // px\r\n        this.closable = false; // whether to display the Close button\r\n        this.closeText = 'Close';\r\n        this.buttonColor = '#000000'; // CSS color\r\n        this.buttonHeight = 18; // px\r\n        this.padding = 12; // px\r\n        this.backgroundColor = '#FFFFFF'; // CSS color\r\n        this.borderWidth = 1; // px\r\n        this.borderColor = '#BBBBBB'; // CSS color\r\n        this.borderRadius = 8; // px\r\n        this.insetWidth = 1; // px\r\n        this.insetColor = '#BBBBBB'; // CSS color\r\n        this.shadow = true; // whether to display shadow\r\n        this.shadowBlur = 15; // px\r\n        this.shadowColor = 'rgba(0,0,0,0.2)'; // CSS color\r\n        this.pointerColor = '#4C4C4C'; // px\r\n        this.pointerBorderColor = '#FFFFFF'; // px\r\n        this.pointerBorderWidth = 1; // px\r\n        this.pointerThickness = 2; // px\r\n        this.zIndex = 1000;\r\n        this.container = null; // where to append the color picker (BODY element by default)\r\n\r\n\r\n        for (var opt in options) {\r\n            if (options.hasOwnProperty(opt)) {\r\n                this[opt] = options[opt];\r\n            }\r\n        }\r\n\r\n\r\n        this.hide = function () {\r\n            if (isPickerOwner()) {\r\n                detachPicker();\r\n            }\r\n        };\r\n\r\n\r\n        this.show = function () {\r\n            drawPicker();\r\n        };\r\n\r\n\r\n        this.redraw = function () {\r\n            if (isPickerOwner()) {\r\n                drawPicker();\r\n            }\r\n        };\r\n\r\n\r\n        this.importColor = function () {\r\n            if (!this.valueElement) {\r\n                this.exportColor();\r\n            } else {\r\n                if (jsc.isElementType(this.valueElement, 'input')) {\r\n                    if (!this.refine) {\r\n                        if (!this.fromString(this.valueElement.value, jsc.leaveValue)) {\r\n                            if (this.styleElement) {\r\n                                this.styleElement.style.backgroundImage = this.styleElement._jscOrigStyle.backgroundImage;\r\n                                this.styleElement.style.backgroundColor = this.styleElement._jscOrigStyle.backgroundColor;\r\n                                this.styleElement.style.color = this.styleElement._jscOrigStyle.color;\r\n                            }\r\n                            this.exportColor(jsc.leaveValue | jsc.leaveStyle);\r\n                        }\r\n                    } else if (!this.required && /^\\s*$/.test(this.valueElement.value)) {\r\n                        this.valueElement.value = '';\r\n                        if (this.styleElement) {\r\n                            this.styleElement.style.backgroundImage = this.styleElement._jscOrigStyle.backgroundImage;\r\n                            this.styleElement.style.backgroundColor = this.styleElement._jscOrigStyle.backgroundColor;\r\n                            this.styleElement.style.color = this.styleElement._jscOrigStyle.color;\r\n                        }\r\n                        this.exportColor(jsc.leaveValue | jsc.leaveStyle);\r\n\r\n                    } else if (this.fromString(this.valueElement.value)) {\r\n                        // managed to import color successfully from the value -> OK, don't do anything\r\n                    } else {\r\n                        this.exportColor(2);\r\n                    }\r\n                } else {\r\n                    // not an input element -> doesn't have any value\r\n                    this.exportColor();\r\n                }\r\n            }\r\n        };\r\n\r\n\r\n        this.exportColor = function (flags) {\r\n            if (flags == 2) {\r\n                if (this.styleElement) {\r\n                    this.styleElement.style.backgroundImage = 'none';\r\n                    this.styleElement.style.backgroundColor = 'transparent';\r\n                    this.styleElement.style.color = '#000';\r\n                }\r\n            } else {\r\n                if (!(flags & jsc.leaveValue) && this.valueElement) {\r\n                    var value = this.toString();\r\n                    if (this.uppercase) { value = value.toUpperCase(); }\r\n                    if (this.hash) { value = '#' + value; }\r\n\r\n                    if (jsc.isElementType(this.valueElement, 'input')) {\r\n                        this.valueElement.value = value;\r\n                    } else {\r\n                        this.valueElement.innerHTML = value;\r\n                    }\r\n                }\r\n                if (!(flags & jsc.leaveStyle)) {\r\n                    if (this.styleElement) {\r\n                        this.styleElement.style.backgroundImage = 'none';\r\n                        this.styleElement.style.backgroundColor = '#' + this.toString();\r\n                        this.styleElement.style.color = this.isLight() ? '#000' : '#FFF';\r\n                    }\r\n                }\r\n                if (!(flags & jsc.leavePad) && isPickerOwner()) {\r\n                    redrawPad();\r\n                }\r\n                if (!(flags & jsc.leaveSld) && isPickerOwner()) {\r\n                    redrawSld();\r\n                }\r\n            }\r\n        };\r\n\r\n\r\n        // h: 0-360\r\n        // s: 0-100\r\n        // v: 0-100\r\n        //\r\n        this.fromHSV = function (h, s, v, flags) { // null = don't change\r\n            if (h !== null) {\r\n                if (isNaN(h)) { return false; }\r\n                h = Math.max(0, Math.min(360, h));\r\n            }\r\n            if (s !== null) {\r\n                if (isNaN(s)) { return false; }\r\n                s = Math.max(0, Math.min(100, this.maxS, s), this.minS);\r\n            }\r\n            if (v !== null) {\r\n                if (isNaN(v)) { return false; }\r\n                v = Math.max(0, Math.min(100, this.maxV, v), this.minV);\r\n            }\r\n\r\n            this.rgb = HSV_RGB(\r\n                h===null ? this.hsv[0] : (this.hsv[0]=h),\r\n                s===null ? this.hsv[1] : (this.hsv[1]=s),\r\n                v===null ? this.hsv[2] : (this.hsv[2]=v)\r\n            );\r\n\r\n            this.exportColor(flags);\r\n        };\r\n\r\n\r\n        // r: 0-255\r\n        // g: 0-255\r\n        // b: 0-255\r\n        //\r\n        this.fromRGB = function (r, g, b, flags) { // null = don't change\r\n            if (r !== null) {\r\n                if (isNaN(r)) { return false; }\r\n                r = Math.max(0, Math.min(255, r));\r\n            }\r\n            if (g !== null) {\r\n                if (isNaN(g)) { return false; }\r\n                g = Math.max(0, Math.min(255, g));\r\n            }\r\n            if (b !== null) {\r\n                if (isNaN(b)) { return false; }\r\n                b = Math.max(0, Math.min(255, b));\r\n            }\r\n\r\n            var hsv = RGB_HSV(\r\n                r===null ? this.rgb[0] : r,\r\n                g===null ? this.rgb[1] : g,\r\n                b===null ? this.rgb[2] : b\r\n            );\r\n            if (hsv[0] !== null) {\r\n                this.hsv[0] = Math.max(0, Math.min(360, hsv[0]));\r\n            }\r\n            if (hsv[2] !== 0) {\r\n                this.hsv[1] = hsv[1]===null ? null : Math.max(0, this.minS, Math.min(100, this.maxS, hsv[1]));\r\n            }\r\n            this.hsv[2] = hsv[2]===null ? null : Math.max(0, this.minV, Math.min(100, this.maxV, hsv[2]));\r\n\r\n            // update RGB according to final HSV, as some values might be trimmed\r\n            var rgb = HSV_RGB(this.hsv[0], this.hsv[1], this.hsv[2]);\r\n            this.rgb[0] = rgb[0];\r\n            this.rgb[1] = rgb[1];\r\n            this.rgb[2] = rgb[2];\r\n\r\n            this.exportColor(flags);\r\n        };\r\n\r\n\r\n        this.fromString = function (str, flags) {\r\n            var m;\r\n            if (m = str.match(/^\\W*([0-9A-F]{3}([0-9A-F]{3})?)\\W*$/i)) {\r\n                // HEX notation\r\n                //\r\n\r\n                if (m[1].length === 6) {\r\n                    // 6-char notation\r\n                    this.fromRGB(\r\n                        parseInt(m[1].substr(0,2),16),\r\n                        parseInt(m[1].substr(2,2),16),\r\n                        parseInt(m[1].substr(4,2),16),\r\n                        flags\r\n                    );\r\n                } else {\r\n                    // 3-char notation\r\n                    this.fromRGB(\r\n                        parseInt(m[1].charAt(0) + m[1].charAt(0),16),\r\n                        parseInt(m[1].charAt(1) + m[1].charAt(1),16),\r\n                        parseInt(m[1].charAt(2) + m[1].charAt(2),16),\r\n                        flags\r\n                    );\r\n                }\r\n                return true;\r\n\r\n            } else if (m = str.match(/^\\W*rgba?\\(([^)]*)\\)\\W*$/i)) {\r\n                var params = m[1].split(',');\r\n                var re = /^\\s*(\\d*)(\\.\\d+)?\\s*$/;\r\n                var mR, mG, mB;\r\n                if (\r\n                    params.length >= 3 &&\r\n                    (mR = params[0].match(re)) &&\r\n                    (mG = params[1].match(re)) &&\r\n                    (mB = params[2].match(re))\r\n                ) {\r\n                    var r = parseFloat((mR[1] || '0') + (mR[2] || ''));\r\n                    var g = parseFloat((mG[1] || '0') + (mG[2] || ''));\r\n                    var b = parseFloat((mB[1] || '0') + (mB[2] || ''));\r\n                    this.fromRGB(r, g, b, flags);\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n\r\n\r\n        this.toString = function () {\r\n            return (\r\n                (0x100 | Math.round(this.rgb[0])).toString(16).substr(1) +\r\n                (0x100 | Math.round(this.rgb[1])).toString(16).substr(1) +\r\n                (0x100 | Math.round(this.rgb[2])).toString(16).substr(1)\r\n            );\r\n        };\r\n\r\n\r\n        this.toHEXString = function () {\r\n            return '#' + this.toString().toUpperCase();\r\n        };\r\n\r\n\r\n        this.toRGBString = function () {\r\n            return ('rgb(' +\r\n                Math.round(this.rgb[0]) + ',' +\r\n                Math.round(this.rgb[1]) + ',' +\r\n                Math.round(this.rgb[2]) + ')'\r\n            );\r\n        };\r\n\r\n\r\n        this.isLight = function () {\r\n            return (\r\n                0.213 * this.rgb[0] +\r\n                0.715 * this.rgb[1] +\r\n                0.072 * this.rgb[2] >\r\n                255 / 2\r\n            );\r\n        };\r\n\r\n\r\n        this._processParentElementsInDOM = function () {\r\n            if (this._linkedElementsProcessed) { return; }\r\n            this._linkedElementsProcessed = true;\r\n\r\n            var elm = this.targetElement;\r\n            do {\r\n                // If the target element or one of its parent nodes has fixed position,\r\n                // then use fixed positioning instead\r\n                //\r\n                // Note: In Firefox, getComputedStyle returns null in a hidden iframe,\r\n                // that's why we need to check if the returned style object is non-empty\r\n                var currStyle = jsc.getStyle(elm);\r\n                if (currStyle && currStyle.position.toLowerCase() === 'fixed') {\r\n                    this.fixed = true;\r\n                }\r\n\r\n                if (elm !== this.targetElement) {\r\n                    // Ensure to attach onParentScroll only once to each parent element\r\n                    // (multiple targetElements can share the same parent nodes)\r\n                    //\r\n                    // Note: It's not just offsetParents that can be scrollable,\r\n                    // that's why we loop through all parent nodes\r\n                    if (!elm._jscEventsAttached) {\r\n                        jsc.attachEvent(elm, 'scroll', jsc.onParentScroll);\r\n                        elm._jscEventsAttached = true;\r\n                    }\r\n                }\r\n            } while ((elm = elm.parentNode) && !jsc.isElementType(elm, 'body'));\r\n        };\r\n\r\n\r\n        // r: 0-255\r\n        // g: 0-255\r\n        // b: 0-255\r\n        //\r\n        // returns: [ 0-360, 0-100, 0-100 ]\r\n        //\r\n        function RGB_HSV (r, g, b) {\r\n            r /= 255;\r\n            g /= 255;\r\n            b /= 255;\r\n            var n = Math.min(Math.min(r,g),b);\r\n            var v = Math.max(Math.max(r,g),b);\r\n            var m = v - n;\r\n            if (m === 0) { return [ null, 0, 100 * v ]; }\r\n            var h = r===n ? 3+(b-g)/m : (g===n ? 5+(r-b)/m : 1+(g-r)/m);\r\n            return [\r\n                60 * (h===6?0:h),\r\n                100 * (m/v),\r\n                100 * v\r\n            ];\r\n        }\r\n\r\n\r\n        // h: 0-360\r\n        // s: 0-100\r\n        // v: 0-100\r\n        //\r\n        // returns: [ 0-255, 0-255, 0-255 ]\r\n        //\r\n        function HSV_RGB (h, s, v) {\r\n            var u = 255 * (v / 100);\r\n\r\n            if (h === null) {\r\n                return [ u, u, u ];\r\n            }\r\n\r\n            h /= 60;\r\n            s /= 100;\r\n\r\n            var i = Math.floor(h);\r\n            var f = i%2 ? h-i : 1-(h-i);\r\n            var m = u * (1 - s);\r\n            var n = u * (1 - s * f);\r\n            switch (i) {\r\n                case 6:\r\n                case 0: return [u,n,m];\r\n                case 1: return [n,u,m];\r\n                case 2: return [m,u,n];\r\n                case 3: return [m,n,u];\r\n                case 4: return [n,m,u];\r\n                case 5: return [u,m,n];\r\n            }\r\n        }\r\n\r\n\r\n        function detachPicker () {\r\n            jsc.unsetClass(THIS.targetElement, THIS.activeClass);\r\n            jsc.picker.wrap.parentNode.removeChild(jsc.picker.wrap);\r\n            delete jsc.picker.owner;\r\n        }\r\n\r\n\r\n        function drawPicker () {\r\n\r\n            // At this point, when drawing the picker, we know what the parent elements are\r\n            // and we can do all related DOM operations, such as registering events on them\r\n            // or checking their positioning\r\n            THIS._processParentElementsInDOM();\r\n\r\n            if (!jsc.picker) {\r\n                jsc.picker = {\r\n                    owner: null,\r\n                    wrap : document.createElement('div'),\r\n                    box : document.createElement('div'),\r\n                    boxS : document.createElement('div'), // shadow area\r\n                    boxB : document.createElement('div'), // border\r\n                    pad : document.createElement('div'),\r\n                    padB : document.createElement('div'), // border\r\n                    padM : document.createElement('div'), // mouse/touch area\r\n                    padPal : jsc.createPalette(),\r\n                    cross : document.createElement('div'),\r\n                    crossBY : document.createElement('div'), // border Y\r\n                    crossBX : document.createElement('div'), // border X\r\n                    crossLY : document.createElement('div'), // line Y\r\n                    crossLX : document.createElement('div'), // line X\r\n                    sld : document.createElement('div'),\r\n                    sldB : document.createElement('div'), // border\r\n                    sldM : document.createElement('div'), // mouse/touch area\r\n                    sldGrad : jsc.createSliderGradient(),\r\n                    sldPtrS : document.createElement('div'), // slider pointer spacer\r\n                    sldPtrIB : document.createElement('div'), // slider pointer inner border\r\n                    sldPtrMB : document.createElement('div'), // slider pointer middle border\r\n                    sldPtrOB : document.createElement('div'), // slider pointer outer border\r\n                    btn : document.createElement('div'),\r\n                    btnT : document.createElement('span') // text\r\n                };\r\n\r\n                jsc.picker.pad.appendChild(jsc.picker.padPal.elm);\r\n                jsc.picker.padB.appendChild(jsc.picker.pad);\r\n                jsc.picker.cross.appendChild(jsc.picker.crossBY);\r\n                jsc.picker.cross.appendChild(jsc.picker.crossBX);\r\n                jsc.picker.cross.appendChild(jsc.picker.crossLY);\r\n                jsc.picker.cross.appendChild(jsc.picker.crossLX);\r\n                jsc.picker.padB.appendChild(jsc.picker.cross);\r\n                jsc.picker.box.appendChild(jsc.picker.padB);\r\n                jsc.picker.box.appendChild(jsc.picker.padM);\r\n\r\n                jsc.picker.sld.appendChild(jsc.picker.sldGrad.elm);\r\n                jsc.picker.sldB.appendChild(jsc.picker.sld);\r\n                jsc.picker.sldB.appendChild(jsc.picker.sldPtrOB);\r\n                jsc.picker.sldPtrOB.appendChild(jsc.picker.sldPtrMB);\r\n                jsc.picker.sldPtrMB.appendChild(jsc.picker.sldPtrIB);\r\n                jsc.picker.sldPtrIB.appendChild(jsc.picker.sldPtrS);\r\n                jsc.picker.box.appendChild(jsc.picker.sldB);\r\n                jsc.picker.box.appendChild(jsc.picker.sldM);\r\n\r\n                jsc.picker.btn.appendChild(jsc.picker.btnT);\r\n                jsc.picker.box.appendChild(jsc.picker.btn);\r\n\r\n                jsc.picker.boxB.appendChild(jsc.picker.box);\r\n                jsc.picker.wrap.appendChild(jsc.picker.boxS);\r\n                jsc.picker.wrap.appendChild(jsc.picker.boxB);\r\n            }\r\n\r\n            var p = jsc.picker;\r\n\r\n            var displaySlider = !!jsc.getSliderComponent(THIS);\r\n            var dims = jsc.getPickerDims(THIS);\r\n            var crossOuterSize = (2 * THIS.pointerBorderWidth + THIS.pointerThickness + 2 * THIS.crossSize);\r\n            var padToSliderPadding = jsc.getPadToSliderPadding(THIS);\r\n            var borderRadius = Math.min(\r\n                THIS.borderRadius,\r\n                Math.round(THIS.padding * Math.PI)); // px\r\n            var padCursor = 'crosshair';\r\n\r\n            // wrap\r\n            p.wrap.style.clear = 'both';\r\n            p.wrap.style.width = (dims[0] + 2 * THIS.borderWidth) + 'px';\r\n            p.wrap.style.height = (dims[1] + 2 * THIS.borderWidth) + 'px';\r\n            p.wrap.style.zIndex = THIS.zIndex;\r\n\r\n            // picker\r\n            p.box.style.width = dims[0] + 'px';\r\n            p.box.style.height = dims[1] + 'px';\r\n\r\n            p.boxS.style.position = 'absolute';\r\n            p.boxS.style.left = '0';\r\n            p.boxS.style.top = '0';\r\n            p.boxS.style.width = '100%';\r\n            p.boxS.style.height = '100%';\r\n            jsc.setBorderRadius(p.boxS, borderRadius + 'px');\r\n\r\n            // picker border\r\n            p.boxB.style.position = 'relative';\r\n            p.boxB.style.border = THIS.borderWidth + 'px solid';\r\n            p.boxB.style.borderColor = THIS.borderColor;\r\n            p.boxB.style.background = THIS.backgroundColor;\r\n            jsc.setBorderRadius(p.boxB, borderRadius + 'px');\r\n\r\n            // IE hack:\r\n            // If the element is transparent, IE will trigger the event on the elements under it,\r\n            // e.g. on Canvas or on elements with border\r\n            p.padM.style.background =\r\n            p.sldM.style.background =\r\n                '#FFF';\r\n            jsc.setStyle(p.padM, 'opacity', '0');\r\n            jsc.setStyle(p.sldM, 'opacity', '0');\r\n\r\n            // pad\r\n            p.pad.style.position = 'relative';\r\n            p.pad.style.width = THIS.width + 'px';\r\n            p.pad.style.height = THIS.height + 'px';\r\n\r\n            // pad palettes (HSV and HVS)\r\n            p.padPal.draw(THIS.width, THIS.height, jsc.getPadYComponent(THIS));\r\n\r\n            // pad border\r\n            p.padB.style.position = 'absolute';\r\n            p.padB.style.left = THIS.padding + 'px';\r\n            p.padB.style.top = THIS.padding + 'px';\r\n            p.padB.style.border = THIS.insetWidth + 'px solid';\r\n            p.padB.style.borderColor = THIS.insetColor;\r\n\r\n            // pad mouse area\r\n            p.padM._jscInstance = THIS;\r\n            p.padM._jscControlName = 'pad';\r\n            p.padM.style.position = 'absolute';\r\n            p.padM.style.left = '0';\r\n            p.padM.style.top = '0';\r\n            p.padM.style.width = (THIS.padding + 2 * THIS.insetWidth + THIS.width + padToSliderPadding / 2) + 'px';\r\n            p.padM.style.height = dims[1] + 'px';\r\n            p.padM.style.cursor = padCursor;\r\n\r\n            // pad cross\r\n            p.cross.style.position = 'absolute';\r\n            p.cross.style.left =\r\n            p.cross.style.top =\r\n                '0';\r\n            p.cross.style.width =\r\n            p.cross.style.height =\r\n                crossOuterSize + 'px';\r\n\r\n            // pad cross border Y and X\r\n            p.crossBY.style.position =\r\n            p.crossBX.style.position =\r\n                'absolute';\r\n            p.crossBY.style.background =\r\n            p.crossBX.style.background =\r\n                THIS.pointerBorderColor;\r\n            p.crossBY.style.width =\r\n            p.crossBX.style.height =\r\n                (2 * THIS.pointerBorderWidth + THIS.pointerThickness) + 'px';\r\n            p.crossBY.style.height =\r\n            p.crossBX.style.width =\r\n                crossOuterSize + 'px';\r\n            p.crossBY.style.left =\r\n            p.crossBX.style.top =\r\n                (Math.floor(crossOuterSize / 2) - Math.floor(THIS.pointerThickness / 2) - THIS.pointerBorderWidth) + 'px';\r\n            p.crossBY.style.top =\r\n            p.crossBX.style.left =\r\n                '0';\r\n\r\n            // pad cross line Y and X\r\n            p.crossLY.style.position =\r\n            p.crossLX.style.position =\r\n                'absolute';\r\n            p.crossLY.style.background =\r\n            p.crossLX.style.background =\r\n                THIS.pointerColor;\r\n            p.crossLY.style.height =\r\n            p.crossLX.style.width =\r\n                (crossOuterSize - 2 * THIS.pointerBorderWidth) + 'px';\r\n            p.crossLY.style.width =\r\n            p.crossLX.style.height =\r\n                THIS.pointerThickness + 'px';\r\n            p.crossLY.style.left =\r\n            p.crossLX.style.top =\r\n                (Math.floor(crossOuterSize / 2) - Math.floor(THIS.pointerThickness / 2)) + 'px';\r\n            p.crossLY.style.top =\r\n            p.crossLX.style.left =\r\n                THIS.pointerBorderWidth + 'px';\r\n\r\n            // slider\r\n            p.sld.style.overflow = 'hidden';\r\n            p.sld.style.width = THIS.sliderSize + 'px';\r\n            p.sld.style.height = THIS.height + 'px';\r\n\r\n            // slider gradient\r\n            p.sldGrad.draw(THIS.sliderSize, THIS.height, '#000', '#000');\r\n\r\n            // slider border\r\n            p.sldB.style.display = displaySlider ? 'block' : 'none';\r\n            p.sldB.style.position = 'absolute';\r\n            p.sldB.style.right = THIS.padding + 'px';\r\n            p.sldB.style.top = THIS.padding + 'px';\r\n            p.sldB.style.border = THIS.insetWidth + 'px solid';\r\n            p.sldB.style.borderColor = THIS.insetColor;\r\n\r\n            // slider mouse area\r\n            p.sldM._jscInstance = THIS;\r\n            p.sldM._jscControlName = 'sld';\r\n            p.sldM.style.display = displaySlider ? 'block' : 'none';\r\n            p.sldM.style.position = 'absolute';\r\n            p.sldM.style.right = '0';\r\n            p.sldM.style.top = '0';\r\n            p.sldM.style.width = (THIS.sliderSize + padToSliderPadding / 2 + THIS.padding + 2 * THIS.insetWidth) + 'px';\r\n            p.sldM.style.height = dims[1] + 'px';\r\n            p.sldM.style.cursor = 'default';\r\n\r\n            // slider pointer inner and outer border\r\n            p.sldPtrIB.style.border =\r\n            p.sldPtrOB.style.border =\r\n                THIS.pointerBorderWidth + 'px solid ' + THIS.pointerBorderColor;\r\n\r\n            // slider pointer outer border\r\n            p.sldPtrOB.style.position = 'absolute';\r\n            p.sldPtrOB.style.left = -(2 * THIS.pointerBorderWidth + THIS.pointerThickness) + 'px';\r\n            p.sldPtrOB.style.top = '0';\r\n\r\n            // slider pointer middle border\r\n            p.sldPtrMB.style.border = THIS.pointerThickness + 'px solid ' + THIS.pointerColor;\r\n\r\n            // slider pointer spacer\r\n            p.sldPtrS.style.width = THIS.sliderSize + 'px';\r\n            p.sldPtrS.style.height = sliderPtrSpace + 'px';\r\n\r\n            // the Close button\r\n            function setBtnBorder () {\r\n                var insetColors = THIS.insetColor.split(/\\s+/);\r\n                var outsetColor = insetColors.length < 2 ? insetColors[0] : insetColors[1] + ' ' + insetColors[0] + ' ' + insetColors[0] + ' ' + insetColors[1];\r\n                p.btn.style.borderColor = outsetColor;\r\n            }\r\n            p.btn.style.display = THIS.closable ? 'block' : 'none';\r\n            p.btn.style.position = 'absolute';\r\n            p.btn.style.left = THIS.padding + 'px';\r\n            p.btn.style.bottom = THIS.padding + 'px';\r\n            p.btn.style.padding = '0 15px';\r\n            p.btn.style.height = THIS.buttonHeight + 'px';\r\n            p.btn.style.border = THIS.insetWidth + 'px solid';\r\n            setBtnBorder();\r\n            p.btn.style.color = THIS.buttonColor;\r\n            p.btn.style.font = '12px sans-serif';\r\n            p.btn.style.textAlign = 'center';\r\n            try {\r\n                p.btn.style.cursor = 'pointer';\r\n            } catch(eOldIE) {\r\n                p.btn.style.cursor = 'hand';\r\n            }\r\n            p.btn.onmousedown = function () {\r\n                THIS.hide();\r\n            };\r\n            p.btnT.style.lineHeight = THIS.buttonHeight + 'px';\r\n            p.btnT.innerHTML = '';\r\n            p.btnT.appendChild(document.createTextNode(THIS.closeText));\r\n\r\n            // place pointers\r\n            redrawPad();\r\n            redrawSld();\r\n\r\n            // If we are changing the owner without first closing the picker,\r\n            // make sure to first deal with the old owner\r\n            if (jsc.picker.owner && jsc.picker.owner !== THIS) {\r\n                jsc.unsetClass(jsc.picker.owner.targetElement, THIS.activeClass);\r\n            }\r\n\r\n            // Set the new picker owner\r\n            jsc.picker.owner = THIS;\r\n\r\n            // The redrawPosition() method needs picker.owner to be set, that's why we call it here,\r\n            // after setting the owner\r\n            if (jsc.isElementType(container, 'body')) {\r\n                jsc.redrawPosition();\r\n            } else {\r\n                jsc._drawPosition(THIS, 0, 0, 'relative', false);\r\n            }\r\n\r\n            if (p.wrap.parentNode != container) {\r\n                container.appendChild(p.wrap);\r\n            }\r\n\r\n            jsc.setClass(THIS.targetElement, THIS.activeClass);\r\n        }\r\n\r\n\r\n        function redrawPad () {\r\n            // redraw the pad pointer\r\n            switch (jsc.getPadYComponent(THIS)) {\r\n            case 's': var yComponent = 1; break;\r\n            case 'v': var yComponent = 2; break;\r\n            }\r\n            var x = Math.round((THIS.hsv[0] / 360) * (THIS.width - 1));\r\n            var y = Math.round((1 - THIS.hsv[yComponent] / 100) * (THIS.height - 1));\r\n            var crossOuterSize = (2 * THIS.pointerBorderWidth + THIS.pointerThickness + 2 * THIS.crossSize);\r\n            var ofs = -Math.floor(crossOuterSize / 2);\r\n            jsc.picker.cross.style.left = (x + ofs) + 'px';\r\n            jsc.picker.cross.style.top = (y + ofs) + 'px';\r\n\r\n            // redraw the slider\r\n            switch (jsc.getSliderComponent(THIS)) {\r\n            case 's':\r\n                var rgb1 = HSV_RGB(THIS.hsv[0], 100, THIS.hsv[2]);\r\n                var rgb2 = HSV_RGB(THIS.hsv[0], 0, THIS.hsv[2]);\r\n                var color1 = 'rgb(' +\r\n                    Math.round(rgb1[0]) + ',' +\r\n                    Math.round(rgb1[1]) + ',' +\r\n                    Math.round(rgb1[2]) + ')';\r\n                var color2 = 'rgb(' +\r\n                    Math.round(rgb2[0]) + ',' +\r\n                    Math.round(rgb2[1]) + ',' +\r\n                    Math.round(rgb2[2]) + ')';\r\n                jsc.picker.sldGrad.draw(THIS.sliderSize, THIS.height, color1, color2);\r\n                break;\r\n            case 'v':\r\n                var rgb = HSV_RGB(THIS.hsv[0], THIS.hsv[1], 100);\r\n                var color1 = 'rgb(' +\r\n                    Math.round(rgb[0]) + ',' +\r\n                    Math.round(rgb[1]) + ',' +\r\n                    Math.round(rgb[2]) + ')';\r\n                var color2 = '#000';\r\n                jsc.picker.sldGrad.draw(THIS.sliderSize, THIS.height, color1, color2);\r\n                break;\r\n            }\r\n        }\r\n\r\n\r\n        function redrawSld () {\r\n            var sldComponent = jsc.getSliderComponent(THIS);\r\n            if (sldComponent) {\r\n                // redraw the slider pointer\r\n                switch (sldComponent) {\r\n                case 's': var yComponent = 1; break;\r\n                case 'v': var yComponent = 2; break;\r\n                }\r\n                var y = Math.round((1 - THIS.hsv[yComponent] / 100) * (THIS.height - 1));\r\n                jsc.picker.sldPtrOB.style.top = (y - (2 * THIS.pointerBorderWidth + THIS.pointerThickness) - Math.floor(sliderPtrSpace / 2)) + 'px';\r\n            }\r\n        }\r\n\r\n\r\n        function isPickerOwner () {\r\n            return jsc.picker && jsc.picker.owner === THIS;\r\n        }\r\n\r\n\r\n        function blurValue () {\r\n            THIS.importColor();\r\n        }\r\n\r\n\r\n        // Find the target element\r\n        if (typeof targetElement === 'string') {\r\n            var id = targetElement;\r\n            var elm = document.getElementById(id);\r\n            if (elm) {\r\n                this.targetElement = elm;\r\n            } else {\r\n                jsc.warn('Could not find target element with ID \\'' + id + '\\'');\r\n            }\r\n        } else if (targetElement) {\r\n            this.targetElement = targetElement;\r\n        } else {\r\n            jsc.warn('Invalid target element: \\'' + targetElement + '\\'');\r\n        }\r\n\r\n        if (this.targetElement._jscLinkedInstance) {\r\n            jsc.warn('Cannot link jscolor twice to the same element. Skipping.');\r\n            return;\r\n        }\r\n        this.targetElement._jscLinkedInstance = this;\r\n\r\n        // Find the value element\r\n        this.valueElement = jsc.fetchElement(this.valueElement);\r\n        // Find the style element\r\n        this.styleElement = jsc.fetchElement(this.styleElement);\r\n\r\n        var THIS = this;\r\n        var container =\r\n            this.container ?\r\n            jsc.fetchElement(this.container) :\r\n            document.getElementsByTagName('body')[0];\r\n        var sliderPtrSpace = 3; // px\r\n\r\n        // For BUTTON elements it's important to stop them from sending the form when clicked\r\n        // (e.g. in Safari)\r\n        if (jsc.isElementType(this.targetElement, 'button')) {\r\n            if (this.targetElement.onclick) {\r\n                var origCallback = this.targetElement.onclick;\r\n                this.targetElement.onclick = function (evt) {\r\n                    origCallback.call(this, evt);\r\n                    return false;\r\n                };\r\n            } else {\r\n                this.targetElement.onclick = function () { return false; };\r\n            }\r\n        }\r\n\r\n        /*\r\n        var elm = this.targetElement;\r\n        do {\r\n            // If the target element or one of its offsetParents has fixed position,\r\n            // then use fixed positioning instead\r\n            //\r\n            // Note: In Firefox, getComputedStyle returns null in a hidden iframe,\r\n            // that's why we need to check if the returned style object is non-empty\r\n            var currStyle = jsc.getStyle(elm);\r\n            if (currStyle && currStyle.position.toLowerCase() === 'fixed') {\r\n                this.fixed = true;\r\n            }\r\n\r\n            if (elm !== this.targetElement) {\r\n                // attach onParentScroll so that we can recompute the picker position\r\n                // when one of the offsetParents is scrolled\r\n                if (!elm._jscEventsAttached) {\r\n                    jsc.attachEvent(elm, 'scroll', jsc.onParentScroll);\r\n                    elm._jscEventsAttached = true;\r\n                }\r\n            }\r\n        } while ((elm = elm.offsetParent) && !jsc.isElementType(elm, 'body'));\r\n        */\r\n\r\n        // valueElement\r\n        if (this.valueElement) {\r\n            if (jsc.isElementType(this.valueElement, 'input')) {\r\n                var updateField = function () {\r\n                    THIS.fromString(THIS.valueElement.value, jsc.leaveValue);\r\n                    jsc.dispatchFineChange(THIS);\r\n                };\r\n                jsc.attachEvent(this.valueElement, 'keyup', updateField);\r\n                jsc.attachEvent(this.valueElement, 'input', updateField);\r\n                jsc.attachEvent(this.valueElement, 'blur', blurValue);\r\n                this.valueElement.setAttribute('autocomplete', 'off');\r\n            }\r\n        }\r\n\r\n        // styleElement\r\n        if (this.styleElement) {\r\n            this.styleElement._jscOrigStyle = {\r\n                backgroundImage : this.styleElement.style.backgroundImage,\r\n                backgroundColor : this.styleElement.style.backgroundColor,\r\n                color : this.styleElement.style.color\r\n            };\r\n        }\r\n\r\n        if (this.value) {\r\n            // Try to set the color from the .value option and if unsuccessful,\r\n            // export the current color\r\n            this.fromString(this.value) || this.exportColor();\r\n        } else {\r\n            this.importColor();\r\n        }\r\n    }\r\n\r\n};\r\n\r\n\r\n//================================\r\n// Public properties and methods\r\n//================================\r\n\r\n\r\n// By default, search for all elements with class=\"jscolor\" and install a color picker on them.\r\n//\r\n// You can change what class name will be looked for by setting the property jscolor.lookupClass\r\n// anywhere in your HTML document. To completely disable the automatic lookup, set it to null.\r\n//\r\njsc.jscolor.lookupClass = 'jscolor';\r\n\r\n\r\njsc.jscolor.installByClassName = function (className) {\r\n    var inputElms = document.getElementsByTagName('input');\r\n    var buttonElms = document.getElementsByTagName('button');\r\n\r\n    jsc.tryInstallOnElements(inputElms, className);\r\n    jsc.tryInstallOnElements(buttonElms, className);\r\n};\r\n\r\n\r\njsc.register();\r\n\r\n\r\nreturn jsc.jscolor;\r\n\r\n\r\n})(); }\r\n","Magento_Backend/js/media-uploader.js":"/**\n *\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n * @api\n */\n\n/*global byteConvert*/\ndefine([\n    'jquery',\n    'mage/template',\n    'Magento_Ui/js/modal/alert',\n    'Magento_Ui/js/form/element/file-uploader',\n    'mage/translate',\n    'jquery/file-uploader'\n], function ($, mageTemplate, alert, FileUploader) {\n    'use strict';\n\n    var fileUploader = new FileUploader({\n        dataScope: '',\n        isMultipleFiles: true\n    });\n\n    fileUploader.initUploader();\n\n    $.widget('mage.mediaUploader', {\n\n        /**\n         *\n         * @private\n         */\n        _create: function () {\n            var self = this,\n                progressTmpl = mageTemplate('[data-template=\"uploader\"]'),\n                isResizeEnabled = this.options.isResizeEnabled,\n                resizeConfiguration = {\n                    action: 'resizeImage',\n                    maxWidth: this.options.maxWidth,\n                    maxHeight: this.options.maxHeight\n                };\n\n            if (!isResizeEnabled) {\n                resizeConfiguration = {\n                    action: 'resizeImage'\n                };\n            }\n\n            this.element.find('input[type=file]').fileupload({\n                dataType: 'json',\n                formData: {\n                    'form_key': window.FORM_KEY\n                },\n                dropZone: this.element.find('input[type=file]').closest('[role=\"dialog\"]'),\n                sequentialUploads: true,\n                acceptFileTypes: /(\\.|\\/)(gif|jpe?g|png)$/i,\n                maxFileSize: this.options.maxFileSize,\n\n                /**\n                 * @param {Object} e\n                 * @param {Object} data\n                 */\n                add: function (e, data) {\n                    var fileSize,\n                        tmpl;\n\n                    $.each(data.files, function (index, file) {\n                        fileSize = typeof file.size == 'undefined' ?\n                            $.mage.__('We could not detect a size.') :\n                            byteConvert(file.size);\n\n                        data.fileId = Math.random().toString(33).substr(2, 18);\n\n                        tmpl = progressTmpl({\n                            data: {\n                                name: file.name,\n                                size: fileSize,\n                                id: data.fileId\n                            }\n                        });\n\n                        $(tmpl).appendTo(self.element);\n                    });\n\n                    $(this).fileupload('process', data).done(function () {\n                        data.submit();\n                    });\n                },\n\n                /**\n                 * @param {Object} e\n                 * @param {Object} data\n                 */\n                done: function (e, data) {\n                    if (data.result && !data.result.error) {\n                        self.element.trigger('addItem', data.result);\n                    } else {\n                        fileUploader.aggregateError(data.files[0].name, data.result.error);\n                    }\n\n                    self.element.find('#' + data.fileId).remove();\n                },\n\n                /**\n                 * @param {Object} e\n                 * @param {Object} data\n                 */\n                progress: function (e, data) {\n                    var progress = parseInt(data.loaded / data.total * 100, 10),\n                        progressSelector = '#' + data.fileId + ' .progressbar-container .progressbar';\n\n                    self.element.find(progressSelector).css('width', progress + '%');\n                },\n\n                /**\n                 * @param {Object} e\n                 * @param {Object} data\n                 */\n                fail: function (e, data) {\n                    var progressSelector = '#' + data.fileId;\n\n                    self.element.find(progressSelector).removeClass('upload-progress').addClass('upload-failure')\n                        .delay(2000)\n                        .hide('highlight')\n                        .remove();\n                },\n\n                stop: fileUploader.uploaderConfig.stop\n            });\n\n            this.element.find('input[type=file]').fileupload('option', {\n                processQueue: [{\n                    action: 'loadImage',\n                    fileTypes: /^image\\/(gif|jpeg|png)$/\n                },\n                resizeConfiguration,\n                {\n                    action: 'saveImage'\n                }]\n            });\n        }\n    });\n\n    return $.mage.mediaUploader;\n});\n","Magento_Backend/js/save-with-confirm.js":"/**\n *\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'Magento_Backend/js/validate-store'\n], function ($, validateStore) {\n    'use strict';\n\n    $.widget('mage.saveWithConfirm', validateStore, {\n\n        /**\n         * Check is it need to show confirmation popup\n         *\n         * @returns {Boolean}\n         */\n        _needConfirm: function () {\n\n            var storeData = this.settings.storeData,\n\n            /* edit store view*/\n                storeViewEdit = $('[name=\"store[store_id]\"]').length,\n                groupId = $('[name=\"store[group_id]\"]').val(),\n                isNewStoreView = !$('[name=\"store[store_id]\"]').val(),\n\n            /* edit store */\n                storeEdit = $('[name=\"group[group_id]\"]').length,\n                storeId = $('[name=\"group[group_id]\"]').val(),\n                rootCategoryId = $('[name=\"group[root_category_id]\"]').val(),\n                defaultStoreView = $('[name=\"group[default_store_id]\"]').val(),\n\n            /* edit website */\n                websiteEdit = $('[name=\"website[website_id]\"]').length,\n                defaultStore = $('[name=\"website[default_group_id]\"]').val(),\n\n            /* conditions */\n                storeViewUpdated = storeViewEdit && (isNewStoreView || storeData['group_id'] !== groupId),\n                storeUpdated = storeEdit && storeId &&\n                    (rootCategoryId !== null  && storeData['root_category_id'] !== rootCategoryId ||\n                    defaultStoreView !== null && storeData['default_store_id'] !== defaultStoreView),\n                websiteUpdated = websiteEdit && defaultStore !== null && storeData['default_group_id'] !== defaultStore;\n\n            return storeViewUpdated || storeUpdated || websiteUpdated;\n        }\n    });\n\n    return $.mage.saveWithConfirm;\n});\n","Magento_Backend/js/translate.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/* eslint-disable strict */\ndefine([\n    'jquery',\n    'mage/mage'\n], function ($) {\n    $.extend(true, $, {\n        mage: {\n            translate: (function () {\n                /**\n                 * Key-value translations storage\n                 * @type {Object}\n                 * @private\n                 */\n                var _data = {};\n\n                /**\n                 * Add new translation (two string parameters) or several translations (object)\n                 */\n                this.add = function () {\n                    if (arguments.length > 1) {\n                        _data[arguments[0]] = arguments[1];\n                    } else if (typeof arguments[0] === 'object') {\n                        $.extend(_data, arguments[0]);\n                    }\n                };\n\n                /**\n                 * Make a translation with parsing (to handle case when _data represents tuple)\n                 * @param {String} text\n                 * @return {String}\n                 */\n                this.translate = function (text) {\n                    return typeof _data[text] === 'string' ? _data[text] : text;\n                };\n\n                return this;\n            }())\n        }\n    });\n    $.mage.__ = $.proxy($.mage.translate.translate, $.mage.translate);\n\n    return $.mage.__;\n});\n","Magento_Backend/js/validate-store.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'jquery/ui',\n    'mage/dataPost',\n    'mage/backend/validation',\n    'Magento_Ui/js/modal/confirm'\n], function ($, jqueryUi, dataPost, validation, modalConfirm) {\n    'use strict';\n\n    $.widget('mage.storeValidation', {\n\n        /**\n         * Validation creation\n         * @protected\n         */\n        _create: function () {\n            var form = this.element[0],\n                validator = $.data(form, 'validator');\n\n            if (validator && validator.settings) {\n                validator.settings.submitHandler = this._saveHandler;\n                validator.settings.confirmCallback = this._needConfirm;\n                $.extend(validator.settings, this.options);\n                $.data(form, 'validator', validator);\n            }\n        },\n\n        /**\n         * Check is it need to show confirmation popup\n         *\n         * @returns {Boolean}\n         */\n        _needConfirm: function () {\n            return true;\n        },\n\n        /**\n         * Save form with confirmation if needed\n         *\n         * @param {Object} form\n         * @private\n         */\n        _saveHandler: function (form) {\n            var formData = {},\n                requestData = {},\n                options = $.data(form, 'validator').settings;\n\n            if ($(form).validation('isValid')) {\n                $.each($(form).serializeArray(), function () {\n                    formData[this.name] = this.value || '';\n                });\n                requestData = {\n                    action: $(form).attr('action'),\n                    data: formData\n                };\n\n                if (options.confirmCallback.call(this)) {\n                    modalConfirm({\n                        title: $.mage.__('Warning message'),\n                        content: $.mage.__('This operation can take a long time'),\n                        actions: {\n                            /**\n                             * 'Confirm' action handler.\n                             */\n                            confirm: function () {\n                                $('body').trigger('processStart');\n                                dataPost().postData(requestData);\n                            }\n                        }\n                    });\n                } else {\n                    dataPost().postData(requestData);\n                }\n            }\n        }\n    });\n\n    return $.mage.storeValidation;\n});\n","Magento_Backend/js/store-switcher.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery'\n], function ($) {\n    'use strict';\n\n    /**\n     * @param {Object} storeSwitchConfig\n     */\n    return function (storeSwitchConfig) {\n        var scopeSwitcherHandler;\n\n        (function () {\n            var storesList = $('[data-role=stores-list]');\n\n            storesList.on('click', '[data-value]', function (event) {\n                var val = $(event.target).data('value'),\n                    role = $(event.target).data('role'),\n                    switcher = $('[data-role=' + role + ']');\n\n                event.preventDefault();\n\n                if (!switcher.val() || val !== switcher.val()) {\n\n                    /* Set the value & trigger event */\n                    switcher.val(val).trigger('change');\n                }\n            });\n        })($);\n\n        /**\n         * Switch store scope\n         *\n         * @param {Object} obj\n         * @return void\n         */\n        function switchScope(obj) {\n            var switcher = $(obj),\n                scopeId = switcher.val(),\n                scopeParams = '',\n                switcherParams = {};\n\n            if (scopeId) {\n                scopeParams = switcher.data('param') + '/' + scopeId + '/';\n            }\n\n            if (obj.switchParams) {\n                scopeParams += obj.switchParams;\n            }\n\n            /**\n             * Reload function for switcher\n             */\n            function reload() {\n                var url;\n\n                if (!storeSwitchConfig.isUsingIframe) {\n\n                    if (storeSwitchConfig.switchUrl && storeSwitchConfig.switchUrl.length > 0) {\n                        url = storeSwitchConfig.switchUrl + scopeParams;\n\n                        /* eslint-disable no-undef */\n                        setLocation(url);\n                    }\n\n                } else {\n                    $('#preview_selected_store').val(scopeId);\n                    $('#preview_form').trigger('submit');\n\n                    $('.store-switcher .dropdown-menu li a').each(function () {\n                        var $this = $(this);\n\n                        if ($this.data('role') === 'store-view-id' && $this.data('value') === scopeId) {\n                            $('#store-change-button').html($this.text());\n                        }\n                    });\n\n                    $('#store-change-button').trigger('click');\n                }\n            }\n\n            if (typeof scopeSwitcherHandler !== 'undefined') {\n                switcherParams = {\n                    scopeId: scopeId,\n                    scopeParams: scopeParams,\n                    useConfirm: storeSwitchConfig.useConfirm\n                };\n\n                scopeSwitcherHandler(switcherParams);\n            } else if (storeSwitchConfig.useConfirm) {\n                require([\n                    'Magento_Ui/js/modal/confirm',\n                    'mage/translate'\n                ], function (confirm, $t) {\n                    confirm({\n                        content: $t('Please confirm scope switching. All data that hasn\\'t been saved will be lost.'),\n                        actions: {\n\n                            /**\n                             * Confirm action\n                             */\n                            confirm: function () {\n                                reload();\n                            },\n\n                            /**\n                             * Cancel action\n                             */\n                            cancel: function () {\n                                obj.value = storeSwitchConfig.storeId ? storeSwitchConfig.storeId : '';\n                            }\n                        }\n                    });\n                });\n            } else {\n                reload();\n            }\n        }\n\n        window.scopeSwitcherHandler = scopeSwitcherHandler;\n        window.switchScope = switchScope;\n    };\n});\n","Magento_Backend/js/delete-with-confirm.js":"/**\n *\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'Magento_Backend/js/validate-store'\n], function ($, validateStore) {\n    'use strict';\n\n    $.widget('mage.deleteWithConfirm', validateStore, {});\n\n    return $.mage.deleteWithConfirm;\n});\n","Magento_Backend/js/dashboard/chart.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/*global FORM_KEY*/\ndefine([\n    'jquery',\n    'chartJs',\n    'jquery-ui-modules/widget',\n    'chartjs/chartjs-adapter-moment',\n    'chartjs/es6-shim.min',\n    'moment'\n], function ($, Chart) {\n    'use strict';\n\n    $.widget('mage.dashboardChart', {\n        options: {\n            updateUrl: '',\n            periodSelect: null,\n            periodUnits: [],\n            precision: 0,\n            type: ''\n        },\n        chart: null,\n\n        /**\n         * @private\n         */\n        _create: function () {\n            this.createChart();\n\n            if (this.options.periodSelect) {\n                $(document).on('change', this.options.periodSelect, this.refreshChartData.bind(this));\n\n                this.period = $(this.options.periodSelect).val();\n            }\n        },\n\n        /**\n         * @public\n         */\n        createChart: function () {\n            this.chart = new Chart(this.element, this.getChartSettings());\n            this.refreshChartData();\n        },\n\n        /**\n         * @public\n         */\n        refreshChartData: function () {\n            var data = {\n                'form_key': FORM_KEY\n            };\n\n            if (this.options.periodSelect) {\n                this.period = data.period = $(this.options.periodSelect).val();\n            }\n\n            $.ajax({\n                url: this.options.updateUrl,\n                showLoader: true,\n                data: data,\n                dataType: 'json',\n                type: 'POST',\n                success: this.updateChart.bind(this)\n            });\n        },\n\n        /**\n         * @public\n         * @param {Object} response\n         */\n        updateChart: function (response) {\n            $(this.element).toggle(response.data.length > 0);\n            $(this.element).next('.dashboard-diagram-nodata').toggle(response.data.length === 0);\n\n            this.chart.options.scales.xAxis.time.unit = this.options.periodUnits[this.period] ?\n                this.options.periodUnits[this.period] : 'hour';\n            this.chart.data.datasets[0].data = response.data;\n            this.chart.data.datasets[0].label = response.label;\n            this.chart.update();\n        },\n\n        /**\n         * @returns {Object} chart object configuration\n         */\n        getChartSettings: function () {\n            return {\n                type: 'bar',\n                data: {\n                    datasets: [{\n                        yAxisID: 'yAxis',\n                        xAxisID: 'xAxis',\n                        data: [],\n                        backgroundColor: '#f1d4b3',\n                        borderColor: '#eb5202',\n                        borderWidth: 1\n                    }]\n                },\n                options: {\n                    legend: {\n                        onClick: this.handleChartLegendClick,\n                        position: 'bottom'\n                    },\n                    scales: {\n                        xAxis: {\n                            offset: true,\n                            type: 'time',\n                            ticks: {\n                                source: 'data'\n                            }\n                        },\n                        yAxis: {\n                            ticks: {\n                                beginAtZero: true,\n                                precision: this.options.precision\n                            }\n                        }\n                    }\n                }\n            };\n        },\n\n        /**\n         * @public\n         */\n        handleChartLegendClick: function () {\n            // don't hide dataset on clicking into legend item\n        }\n    });\n\n    return $.mage.dashboardChart;\n});\n","Magento_Backend/js/dashboard/totals.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/*global FORM_KEY*/\ndefine([\n    'jquery',\n    'jquery-ui-modules/widget'\n], function ($) {\n    'use strict';\n\n    $.widget('mage.dashboardTotals', {\n        options: {\n            updateUrl: '',\n            periodSelect: null\n        },\n        elementId: null,\n\n        /**\n         * @private\n         */\n        _create: function () {\n            this.elementId = $(this.element).attr('id');\n\n            if (this.options.periodSelect) {\n                $(document).on('change', this.options.periodSelect, $.proxy(function () {\n                    this.refreshTotals();\n                }, this));\n            }\n        },\n\n        /**\n         * @public\n         */\n        refreshTotals: function () {\n            var periodParam = '';\n\n            if (this.options.periodSelect && $(this.options.periodSelect).val()) {\n                periodParam = 'period/' + $(this.options.periodSelect).val() + '/';\n            }\n\n            $.ajax({\n                url: this.options.updateUrl + periodParam,\n                showLoader: true,\n                data: {\n                    'form_key': FORM_KEY\n                },\n                dataType: 'html',\n                type: 'POST',\n                success: $.proxy(function (response) {\n                    $('#' + this.elementId).replaceWith(response);\n                }, this)\n            });\n        }\n    });\n\n    return $.mage.dashboardTotals;\n});\n","Magento_Backend/js/bootstrap/editor.js":"/**\n *\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\nrequire([\n    'Magento_Variable/variables',\n    'mage/adminhtml/browser'\n]);\n","requirejs/domReady.js":"/**\n * @license RequireJS domReady 2.0.1 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/requirejs/domReady for details\n */\n/*jslint */\n/*global require: false, define: false, requirejs: false,\n  window: false, clearInterval: false, document: false,\n  self: false, setInterval: false */\n\n\ndefine(function () {\n    'use strict';\n\n    var isTop, testDiv, scrollIntervalId,\n        isBrowser = typeof window !== \"undefined\" && window.document,\n        isPageLoaded = !isBrowser,\n        doc = isBrowser ? document : null,\n        readyCalls = [];\n\n    function runCallbacks(callbacks) {\n        var i;\n        for (i = 0; i < callbacks.length; i += 1) {\n            callbacks[i](doc);\n        }\n    }\n\n    function callReady() {\n        var callbacks = readyCalls;\n\n        if (isPageLoaded) {\n            //Call the DOM ready callbacks\n            if (callbacks.length) {\n                readyCalls = [];\n                runCallbacks(callbacks);\n            }\n        }\n    }\n\n    /**\n     * Sets the page as loaded.\n     */\n    function pageLoaded() {\n        if (!isPageLoaded) {\n            isPageLoaded = true;\n            if (scrollIntervalId) {\n                clearInterval(scrollIntervalId);\n            }\n\n            callReady();\n        }\n    }\n\n    if (isBrowser) {\n        if (document.addEventListener) {\n            //Standards. Hooray! Assumption here that if standards based,\n            //it knows about DOMContentLoaded.\n            document.addEventListener(\"DOMContentLoaded\", pageLoaded, false);\n            window.addEventListener(\"load\", pageLoaded, false);\n        } else if (window.attachEvent) {\n            window.attachEvent(\"onload\", pageLoaded);\n\n            testDiv = document.createElement('div');\n            try {\n                isTop = window.frameElement === null;\n            } catch (e) {}\n\n            //DOMContentLoaded approximation that uses a doScroll, as found by\n            //Diego Perini: http://javascript.nwbox.com/IEContentLoaded/,\n            //but modified by other contributors, including jdalton\n            if (testDiv.doScroll && isTop && window.external) {\n                scrollIntervalId = setInterval(function () {\n                    try {\n                        testDiv.doScroll();\n                        pageLoaded();\n                    } catch (e) {}\n                }, 30);\n            }\n        }\n\n        //Check if document is no longer loading, and if so, just trigger page load\n        //listeners. Latest webkit browsers also use \"interactive\", and\n        //will fire the onDOMContentLoaded before \"interactive\" but not after\n        //entering \"interactive\" or \"complete\". More details:\n        //http://dev.w3.org/html5/spec/the-end.html#the-end\n        //http://stackoverflow.com/questions/3665561/document-readystate-of-interactive-vs-ondomcontentloaded\n        //Hmm, this is more complicated on further use, see \"firing too early\"\n        //bug: https://github.com/requirejs/domReady/issues/1\n        //so removing the || document.readyState === \"interactive\" test.\n        //There is still a window.onload binding that should get fired if\n        //DOMContentLoaded is missed.\n        if (document.readyState !== \"loading\") {\n            // Handle it asynchronously to allow scripts the opportunity to delay ready\n            setTimeout(pageLoaded);\n        }\n    }\n\n    /** START OF PUBLIC API **/\n\n    /**\n     * Registers a callback for DOM ready. If DOM is already ready, the\n     * callback is called immediately.\n     * @param {Function} callback\n     */\n    function domReady(callback) {\n        if (isPageLoaded) {\n            callback(doc);\n        } else {\n            readyCalls.push(callback);\n        }\n        return domReady;\n    }\n\n    domReady.version = '2.0.1';\n\n    /**\n     * Loader Plugin API method\n     */\n    domReady.load = function (name, req, onLoad, config) {\n        if (config.isBuild) {\n            onLoad(null);\n        } else {\n            domReady(onLoad);\n        }\n    };\n\n    /** END OF PUBLIC API **/\n\n    return domReady;\n});\n","js/theme.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine('globalNavigationScroll', [\n    'jquery'\n], function ($) {\n    'use strict';\n\n    var win = $(window),\n        subMenuClass = '.submenu',\n        fixedClassName = '_fixed',\n        menu = $('.menu-wrapper'),\n        content = $('.page-wrapper'),\n        menuItems = $('#nav').children('li'),\n        winHeight,\n        menuHeight = menu.height(),\n        menuScrollMax = 0,\n        submenuHeight = 0,\n        contentHeight,\n        winTop = 0,\n        winTopLast = 0,\n        scrollStep = 0,\n        nextTop = 0;\n\n    /**\n     * Check if menu is fixed\n     * @returns {Boolean}\n     */\n    function isMenuFixed() {\n        return menuHeight < contentHeight && contentHeight > winHeight;\n    }\n\n    /**\n     * Check if class exist than add or do nothing\n     * @param {jQuery} el\n     * @param {String} $class\n     */\n    function checkAddClass(el, $class) {\n        if (!el.hasClass($class)) {\n            el.addClass($class);\n        }\n    }\n\n    /**\n     * Check if class exist than remove or do nothing\n     * @param {jQuery} el\n     * @param {String} $class\n     */\n    function checkRemoveClass(el, $class) {\n        if (el.hasClass($class)) {\n            el.removeClass($class);\n        }\n    }\n\n    /**\n     * Calculate and apply menu position\n     */\n    function positionMenu() {\n\n        //  Spotting positions and heights\n        winHeight = win.height();\n        contentHeight = content.height();\n        winTop = win.scrollTop();\n        scrollStep = winTop - winTopLast;\n\n        if (isMenuFixed()) { // fixed menu cases\n\n            checkAddClass(menu, fixedClassName);\n\n            if (menuHeight > winHeight) { // smart scroll cases\n\n                if (winTop > winTopLast) { //eslint-disable-line max-depth\n\n                    menuScrollMax = menuHeight - winHeight;\n\n                    nextTop < menuScrollMax - scrollStep ?\n                        nextTop += scrollStep : nextTop = menuScrollMax;\n\n                    menu.css('top', -nextTop);\n\n                } else if (winTop <= winTopLast) { // scroll up\n\n                    nextTop > -scrollStep ?\n                        nextTop += scrollStep : nextTop = 0;\n\n                    menu.css('top', -nextTop);\n\n                }\n\n            }\n\n        } else { // static menu cases\n            checkRemoveClass(menu, fixedClassName);\n            menu.css('top', 'auto');\n        }\n\n        //  Save previous window scrollTop\n        winTopLast = winTop;\n\n    }\n\n    positionMenu(); // page start calculation\n\n    //  Change position on scroll\n    win.on('scroll', function () {\n        positionMenu();\n    });\n\n    win.on('resize', function () {\n\n        winHeight = win.height();\n\n        //  Reset position if fixed and out of smart scroll\n        if (menuHeight < contentHeight && menuHeight <= winHeight) {\n            menu.removeAttr('style');\n            menuItems.off();\n        }\n\n    });\n\n    //  Add event to menuItems to check submenu overlap\n    menuItems.on('click', function () {\n\n        var submenu = $(this).children(subMenuClass),\n            delta,\n            logo = $('.logo')[0].offsetHeight;\n\n        submenuHeight = submenu.height();\n\n        if (submenuHeight > menuHeight && menuHeight + logo > winHeight) {\n            menu.height(submenuHeight - logo);\n            delta = -menu.position().top;\n            window.scrollTo(0, 0);\n            positionMenu();\n            window.scrollTo(0, delta);\n            positionMenu();\n            menuHeight = submenuHeight;\n        }\n    });\n\n});\n\ndefine('globalNavigation', [\n    'jquery',\n    'jquery/ui',\n    'globalNavigationScroll'\n], function ($) {\n    'use strict';\n\n    $.widget('mage.globalNavigation', {\n        options: {\n            selectors: {\n                menu: '#nav',\n                currentItem: '._current',\n                topLevelItem: '.level-0',\n                topLevelHref: '> a',\n                subMenu: '> .submenu',\n                closeSubmenuBtn: '[data-role=\"close-submenu\"]'\n            },\n            overlayTmpl: '<div class=\"admin__menu-overlay\"></div>'\n        },\n\n        /** @inheritdoc */\n        _create: function () {\n            var selectors = this.options.selectors;\n\n            this.menu = this.element;\n            this.menuLinks = $(selectors.topLevelHref, selectors.topLevelItem);\n            this.closeActions = $(selectors.closeSubmenuBtn);\n\n            this._initOverlay()\n                ._bind();\n        },\n\n        /**\n         * @return {Object}\n         * @private\n         */\n        _initOverlay: function () {\n            this.overlay = $(this.options.overlayTmpl).appendTo('body').hide(0);\n\n            return this;\n        },\n\n        /**\n         * @private\n         */\n        _bind: function () {\n            var focus = this._focus.bind(this),\n                open = this._open.bind(this),\n                blur = this._blur.bind(this),\n                keyboard = this._keyboard.bind(this);\n\n            this.menuLinks\n                .on('focus', focus)\n                .on('click', open);\n\n            this.menuLinks.last().on('blur', blur);\n\n            this.closeActions.on('keydown', keyboard);\n        },\n\n        /**\n         * Remove active class from current menu item\n         * Turn back active class to current page menu item\n         */\n        _blur: function (e) {\n            var selectors = this.options.selectors,\n                menuItem = $(e.target).closest(selectors.topLevelItem),\n                currentItem = $(selectors.menu).find(selectors.currentItem);\n\n            menuItem.removeClass('_active');\n            currentItem.addClass('_active');\n        },\n\n        /**\n         * Add focus to active menu item\n         */\n        _keyboard: function (e) {\n            var selectors = this.options.selectors,\n                menuItem = $(e.target).closest(selectors.topLevelItem);\n\n            if (e.which === 13) {\n                this._close(e);\n                $(selectors.topLevelHref, menuItem).trigger('focus');\n            }\n        },\n\n        /**\n         * Toggle active state on focus\n         */\n        _focus: function (e) {\n            var selectors = this.options.selectors,\n                menuItem = $(e.target).closest(selectors.topLevelItem);\n\n            menuItem.addClass('_active')\n                .siblings(selectors.topLevelItem)\n                .removeClass('_active');\n        },\n\n        /**\n         * @param {jQuery.Event} e\n         * @private\n         */\n        _closeSubmenu: function (e) {\n            var selectors = this.options.selectors,\n                currentItem = $(selectors.menu).find(selectors.currentItem);\n\n            this._close(e);\n\n            currentItem.addClass('_active');\n        },\n\n        /**\n         * @param {jQuery.Event} e\n         * @private\n         */\n        _open: function (e) {\n            var selectors = this.options.selectors,\n                menuItemSelector = selectors.topLevelItem,\n                menuItem = $(e.target).closest(menuItemSelector),\n                subMenu = $(selectors.subMenu, menuItem),\n                close = this._closeSubmenu.bind(this),\n                closeBtn = subMenu.find(selectors.closeSubmenuBtn);\n\n            if (subMenu.length) {\n                e.preventDefault();\n            }\n            closeBtn.on('click', close);\n\n            if ($(menuItem).hasClass('_show')) {\n                closeBtn.trigger('click');\n            } else {\n                menuItem.addClass('_show')\n                    .siblings(menuItemSelector)\n                    .removeClass('_show');\n                subMenu.attr('aria-expanded', 'true');\n                this.overlay.show(0).on('click', close);\n                this.menuLinks.last().off('blur');\n            }\n        },\n\n        /**\n         * @param {jQuery.Event} e\n         * @private\n         */\n        _close: function (e) {\n            var selectors = this.options.selectors,\n                menuItem = this.menu.find(selectors.topLevelItem + '._show'),\n                subMenu = $(selectors.subMenu, menuItem),\n                closeBtn = subMenu.find(selectors.closeSubmenuBtn),\n                blur = this._blur.bind(this);\n\n            e.preventDefault();\n\n            this.overlay.hide(0).off('click');\n\n            this.menuLinks.last().on('blur', blur);\n\n            closeBtn.off('click');\n\n            subMenu.attr('aria-expanded', 'false');\n\n            menuItem.removeClass('_show _active');\n        }\n    });\n\n    return $.mage.globalNavigation;\n});\n\ndefine('globalSearch', [\n    'jquery',\n    'Magento_Ui/js/lib/key-codes',\n    'jquery-ui-modules/widget'\n], function ($, keyCodes) {\n    'use strict';\n\n    $.widget('mage.globalSearch', {\n        options: {\n            field: '.search-global-field',\n            fieldActiveClass: '_active',\n            input: '#search-global'\n        },\n\n        /** @inheritdoc */\n        _create: function () {\n            this.field = $(this.options.field);\n            this.input = $(this.options.input);\n            this._events();\n        },\n\n        /**\n         * @private\n         */\n        _events: function () {\n            var self = this;\n\n            this.input.on('blur.resetGlobalSearchForm', function () {\n                if (!self.input.val()) {\n                    self.field.removeClass(self.options.fieldActiveClass);\n                }\n            });\n\n            this.input.on('focus.activateGlobalSearchForm', function () {\n                self.field.addClass(self.options.fieldActiveClass);\n            });\n\n            $(document).on('keydown.activateGlobalSearchForm', function (event) {\n                var inputs = [\n                    'input',\n                    'select',\n                    'textarea'\n                ];\n\n                if (keyCodes[event.which] !== 'forwardSlashKey' ||\n                    inputs.indexOf(event.target.tagName.toLowerCase()) !== -1 ||\n                    event.target.isContentEditable\n                ) {\n                    return;\n                }\n\n                event.preventDefault();\n\n                self.input.focus();\n            });\n        }\n    });\n\n    return $.mage.globalSearch;\n});\n\ndefine('modalPopup', [\n    'jquery',\n    'jquery/ui'\n], function ($) {\n    'use strict';\n\n    $.widget('mage.modalPopup', {\n        options: {\n            popup: '.popup',\n            btnDismiss: '[data-dismiss=\"popup\"]',\n            btnHide: '[data-hide=\"popup\"]'\n        },\n\n        /** @inheritdoc */\n        _create: function () {\n            this.fade = this.element;\n            this.popup = $(this.options.popup, this.fade);\n            this.btnDismiss = $(this.options.btnDismiss, this.popup);\n            this.btnHide = $(this.options.btnHide, this.popup);\n\n            this._events();\n        },\n\n        /**\n         * @private\n         */\n        _events: function () {\n            var self = this;\n\n            this.btnDismiss\n                .on('click.dismissModalPopup', function () {\n                    self.fade.remove();\n                });\n\n            this.btnHide\n                .on('click.hideModalPopup', function () {\n                    self.fade.hide();\n                });\n        }\n    });\n\n    return $.mage.modalPopup;\n});\n\ndefine('useDefault', [\n    'jquery',\n    'jquery/ui'\n], function ($) {\n    'use strict';\n\n    $.widget('mage.useDefault', {\n        options: {\n            field: '.field',\n            useDefault: '.use-default',\n            checkbox: '.use-default-control',\n            label: '.use-default-label'\n        },\n\n        /** @inheritdoc */\n        _create: function () {\n            this.el = this.element;\n            this.field = $(this.el).closest(this.options.field);\n            this.useDefault = $(this.options.useDefault, this.field);\n            this.checkbox = $(this.options.checkbox, this.useDefault);\n            this.label = $(this.options.label, this.useDefault);\n            this.origValue = this.el.attr('data-store-label');\n\n            this._events();\n        },\n\n        /**\n         * @private\n         */\n        _events: function () {\n            var self = this;\n\n            this.el.on(\n                    'change.toggleUseDefaultVisibility keyup.toggleUseDefaultVisibility',\n                    $.proxy(this._toggleUseDefaultVisibility, this)\n                ).trigger('change.toggleUseDefaultVisibility');\n\n            this.checkboxon('change.setOrigValue', function () {\n                if ($(this).prop('checked')) {\n                    self.el\n                        .val(self.origValue)\n                        .trigger('change.toggleUseDefaultVisibility');\n\n                    $(this).prop('checked', false);\n                }\n            });\n        },\n\n        /**\n         * @private\n         */\n        _toggleUseDefaultVisibility: function () {\n            var curValue = this.el.val(),\n                origValue = this.origValue;\n\n            this[curValue != origValue ? '_show' : '_hide'](); //eslint-disable-line eqeqeq\n        },\n\n        /**\n         * @private\n         */\n        _show: function () {\n            this.useDefault.show();\n        },\n\n        /**\n         * @private\n         */\n        _hide: function () {\n            this.useDefault.hide();\n        }\n    });\n\n    return $.mage.useDefault;\n});\n\ndefine('loadingPopup', [\n    'jquery',\n    'jquery/ui'\n], function ($) {\n    'use strict';\n\n    $.widget('mage.loadingPopup', {\n        options: {\n            message: 'Please wait...',\n            timeout: 5000,\n            timeoutId: null,\n            callback: null,\n            template: null\n        },\n\n        /** @inheritdoc */\n        _create: function () {\n            this.template =\n                '<div class=\"popup popup-loading\">' +\n                '<div class=\"popup-inner\">' + this.options.message + '</div>' +\n                '</div>';\n\n            this.popup = $(this.template);\n\n            this._show();\n            this._events();\n        },\n\n        /**\n         * @private\n         */\n        _events: function () {\n            var self = this;\n\n            this.element\n                .on('showLoadingPopup', function () {\n                    self._show();\n                })\n                .on('hideLoadingPopup', function () {\n                    self._hide();\n                });\n        },\n\n        /**\n         * @private\n         */\n        _show: function () {\n            var options = this.options,\n                timeout = options.timeout;\n\n            $('body').trigger('processStart');\n\n            if (timeout) {\n                options.timeoutId = setTimeout(this._delayedHide.bind(this), timeout);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _hide: function () {\n            $('body').trigger('processStop');\n        },\n\n        /**\n         * @private\n         */\n        _delayedHide: function () {\n            this._hide();\n\n            this.options.callback && this.options.callback();\n\n            this.options.timeoutId && clearTimeout(this.options.timeoutId);\n        }\n    });\n\n    return $.mage.loadingPopup;\n});\n\ndefine('collapsable', [\n    'jquery',\n    'jquery/ui',\n    'jquery/jquery.tabs'\n], function ($) {\n    'use strict';\n\n    $.widget('mage.collapsable', {\n        options: {\n            parent: null,\n            openedClass: 'opened',\n            wrapper: '.fieldset-wrapper'\n        },\n\n        /** @inheritdoc */\n        _create: function () {\n            this._events();\n        },\n\n        /** @inheritdoc */\n        _events: function () {\n            var self = this;\n\n            this.element\n                .on('show.bs.collapse', function (e) {\n                    var fieldsetWrapper = $(this).closest(self.options.wrapper);\n\n                    fieldsetWrapper.addClass(self.options.openedClass);\n                    e.stopPropagation();\n                })\n                .on('hide.bs.collapse', function (e) {\n                    var fieldsetWrapper = $(this).closest(self.options.wrapper);\n\n                    fieldsetWrapper.removeClass(self.options.openedClass);\n                    e.stopPropagation();\n                });\n        }\n    });\n\n    return $.mage.collapsable;\n});\n\ndefine('js/theme', [\n    'jquery',\n    'mage/smart-keyboard-handler',\n    'collapsable',\n    'domReady!'\n], function ($, keyboardHandler) {\n    'use strict';\n\n    /* @TODO refactor collapsible as widget and avoid logic binding with such a general selectors */\n    $('.collapse').collapsable();\n\n    $.each($('.entry-edit'), function (i, entry) {\n        $('.collapse:first', entry).filter(function () {\n            return $(this).data('collapsed') !== true;\n        }).collapse('show');\n    });\n\n    keyboardHandler.apply();\n});\n","Magento_LoginAsCustomerAssistance/js/not-allowed-popup.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'uiComponent',\n    'Magento_Ui/js/modal/confirm',\n    'mage/translate'\n], function (Component, confirm, $t) {\n\n    'use strict';\n\n    return Component.extend({\n        /**\n         * Initialize Component\n         */\n        initialize: function () {\n            var self = this,\n                content;\n\n            this._super();\n\n            content = '<div class=\"message message-warning\">' + self.content + '</div>';\n\n            /**\n             * Not Allowed popup\n             *\n             * @returns {Boolean}\n             */\n            window.lacNotAllowedPopup = function () {\n                confirm({\n                    title: self.title,\n                    content: content,\n                    modalClass: 'confirm lac-confirm',\n                    buttons: [\n                        {\n                            text: $t('Close'),\n                            class: 'action-secondary action-dismiss',\n\n                            /**\n                             * Click handler.\n                             */\n                            click: function (event) {\n                                this.closeModal(event);\n                            }\n                        }\n                    ]\n                });\n\n                return false;\n            };\n        }\n    });\n});\n","Magento_InventoryInStorePickupAdminUi/js/form/element/conditional-required.js":"/*\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'Magento_Ui/js/form/element/abstract',\n    'ko',\n    'underscore',\n    'mageUtils'\n], function (uiElement, ko, _, utils) {\n    'use strict';\n\n    /**\n     * Provide possibility to make field required by dependency on other field value.\n     */\n    return uiElement.extend(\n        {\n            /**\n             * Convert `required` value from string ('1', '0') to bool (true, false)\n             */\n            initialize: function () {\n                this._super();\n\n                // eslint-disable-next-line vars-on-top\n                var required = this.required;\n\n                this.required = ko.computed({\n                    /**\n                     * @returns {Boolean}\n                     */\n                    read: function () {\n                        return required();\n                    },\n\n                    /**\n                     * @param {String|Boolean} value\n                     */\n                    write: function (value) {\n                        value = Boolean(value) === value ? value : Boolean(parseInt(value, 10));\n\n                        if (required() !== value) {\n                            required(value);\n                            this.setValidation('required-entry', required());\n                        }\n                    },\n                    owner: this\n                });\n                this.required(required());\n            },\n\n            /**\n             * @param {(String|Object)} rule\n             * @param {(Object|Boolean)} [options]\n             * @returns {Abstract} Chainable.\n             */\n            setValidation: function (rule, options) {\n                var rules = utils.copy(this.validation),\n                    changed;\n\n                if (_.isObject(rule)) {\n                    _.extend(this.validation, rule);\n                } else {\n                    this.validation[rule] = options;\n                }\n\n                changed = !utils.compare(rules, this.validation).equal;\n\n                if (changed) {\n                    this.required(!!this.validation['required-entry']);\n                    this.validate();\n                }\n\n                return this;\n            }\n        }\n    );\n});\n","Magento_InventoryInStorePickupAdminUi/js/form/components/fieldset.js":"/*\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'Magento_Ui/js/form/components/fieldset',\n    'ko'\n], function (Fieldset, ko) {\n    'use strict';\n\n    /**\n     * TODO Remove when issue is resolved in core.\n     * @see Please check issue in core for more details: https://github.com/magento/magento2/issues/22067.\n     */\n    return Fieldset.extend(ko).extend(\n        {\n            /**\n             * Convert `visible` value from string ('1', '0') to bool (true, false)\n             */\n            initialize: function () {\n                this._super();\n\n                // eslint-disable-next-line vars-on-top\n                var visible = this.visible;\n\n                this.visible = ko.computed({\n                    /**\n                     * @returns {Boolean}\n                     */\n                    read: function () {\n                        return visible();\n                    },\n\n                    /**\n                     * @param {String} value\n                     */\n                    write: function (value) {\n                        value = Boolean(value) === value ? value : Boolean(parseInt(value, 10));\n                        visible(value);\n                    },\n                    owner: this\n                });\n                this.visible(visible());\n            }\n        }\n    );\n});\n","js-storage/js.storage.js":"/*\n * JS Storage Plugin\n *\n * Copyright (c) 2019 Julien Maurel\n *\n * Licensed under the MIT license:\n * http://www.opensource.org/licenses/mit-license.php\n *\n * Project home:\n * https://github.com/julien-maurel/js-storage\n *\n * Version: 1.1.0\n */\n(function (factory) {\n    var registeredInModuleLoader = false;\n    if (typeof define === 'function' && define.amd) {\n        define(['jquery', 'jquery/jquery.cookie'], factory);\n        registeredInModuleLoader = true;\n    }\n    if (typeof exports === 'object') {\n        module.exports = factory();\n        registeredInModuleLoader = true;\n    }\n    if (!registeredInModuleLoader) {\n        var OldStorages = window.Storages;\n        var api = window.Storages = factory();\n        api.noConflict = function () {\n            window.Storages = OldStorages;\n            return api;\n        };\n    }\n}(function () {\n    // Variables used by utilities functions (like isPlainObject...)\n    var class2type = {};\n    var toString = class2type.toString;\n    var hasOwn = class2type.hasOwnProperty;\n    var fnToString = hasOwn.toString;\n    var ObjectFunctionString = fnToString.call(Object);\n    var getProto = Object.getPrototypeOf;\n    var apis = {};\n\n    // Prefix to use with cookie fallback\n    var cookie_local_prefix = \"ls_\";\n    var cookie_session_prefix = \"ss_\";\n\n    // Get items from a storage\n    function _get() {\n        var storage = this._type, l = arguments.length, s = window[storage], a = arguments, a0 = a[0], vi, ret, tmp, i, j;\n        if (l < 1) {\n            throw new Error('Minimum 1 argument must be given');\n        } else if (Array.isArray(a0)) {\n            // If second argument is an array, return an object with value of storage for each item in this array\n            ret = {};\n            for (i in a0) {\n                if (a0.hasOwnProperty(i)) {\n                    vi = a0[i];\n                    try {\n                        ret[vi] = JSON.parse(s.getItem(vi));\n                    } catch (e) {\n                        ret[vi] = s.getItem(vi);\n                    }\n                }\n            }\n            return ret;\n        } else if (l == 1) {\n            // If only 1 argument, return value directly\n            try {\n                return JSON.parse(s.getItem(a0));\n            } catch (e) {\n                return s.getItem(a0);\n            }\n        } else {\n            // If more than 1 argument, parse storage to retrieve final value to return it\n            // Get first level\n            try {\n                ret = JSON.parse(s.getItem(a0));\n                if (!ret) {\n                    throw new ReferenceError(a0 + ' is not defined in this storage');\n                }\n            } catch (e) {\n                throw new ReferenceError(a0 + ' is not defined in this storage');\n            }\n            // Parse next levels\n            for (i = 1; i < l - 1; i++) {\n                ret = ret[a[i]];\n                if (ret === undefined) {\n                    throw new ReferenceError([].slice.call(a, 0, i + 1).join('.') + ' is not defined in this storage');\n                }\n            }\n            // If last argument is an array, return an object with value for each item in this array\n            // Else return value normally\n            if (Array.isArray(a[i])) {\n                tmp = ret;\n                ret = {};\n                for (j in a[i]) {\n                    if (a[i].hasOwnProperty(j)) {\n                        ret[a[i][j]] = tmp[a[i][j]];\n                    }\n                }\n                return ret;\n            } else {\n                return ret[a[i]];\n            }\n        }\n    }\n\n    // Set items of a storage\n    function _set() {\n        var storage = this._type, l = arguments.length, s = window[storage], a = arguments, a0 = a[0], a1 = a[1], vi, to_store = isNaN(a1) ? {} : [], type, tmp, i;\n        if (l < 1 || !_isPlainObject(a0) && l < 2) {\n            throw new Error('Minimum 2 arguments must be given or first parameter must be an object');\n        } else if (_isPlainObject(a0)) {\n            // If first argument is an object, set values of storage for each property of this object\n            for (i in a0) {\n                if (a0.hasOwnProperty(i)) {\n                    vi = a0[i];\n                    if (!_isPlainObject(vi) && !this.alwaysUseJson) {\n                        s.setItem(i, vi);\n                    } else {\n                        s.setItem(i, JSON.stringify(vi));\n                    }\n                }\n            }\n            return a0;\n        } else if (l == 2) {\n            // If only 2 arguments, set value of storage directly\n            if (typeof a1 === 'object' || this.alwaysUseJson) {\n                s.setItem(a0, JSON.stringify(a1));\n            } else {\n                s.setItem(a0, a1);\n            }\n            return a1;\n        } else {\n            // If more than 3 arguments, parse storage to retrieve final node and set value\n            // Get first level\n            try {\n                tmp = s.getItem(a0);\n                if (tmp != null) {\n                    to_store = JSON.parse(tmp);\n                }\n            } catch (e) {\n            }\n            tmp = to_store;\n            // Parse next levels and set value\n            for (i = 1; i < l - 2; i++) {\n                vi = a[i];\n                type = isNaN(a[i + 1]) ? \"object\" : \"array\";\n                if (!tmp[vi] || type == \"object\" && !_isPlainObject(tmp[vi]) || type == \"array\" && !Array.isArray(tmp[vi])) {\n                    if (type == \"array\") tmp[vi] = [];\n                    else tmp[vi] = {};\n                }\n                tmp = tmp[vi];\n            }\n            tmp[a[i]] = a[i + 1];\n            s.setItem(a0, JSON.stringify(to_store));\n            return to_store;\n        }\n    }\n\n    // Remove items from a storage\n    function _remove() {\n        var storage = this._type, l = arguments.length, s = window[storage], a = arguments, a0 = a[0], to_store, tmp, i, j;\n        if (l < 1) {\n            throw new Error('Minimum 1 argument must be given');\n        } else if (Array.isArray(a0)) {\n            // If first argument is an array, remove values from storage for each item of this array\n            for (i in a0) {\n                if (a0.hasOwnProperty(i)) {\n                    s.removeItem(a0[i]);\n                }\n            }\n            return true;\n        } else if (l == 1) {\n            // If only 2 arguments, remove value from storage directly\n            s.removeItem(a0);\n            return true;\n        } else {\n            // If more than 2 arguments, parse storage to retrieve final node and remove value\n            // Get first level\n            try {\n                to_store = tmp = JSON.parse(s.getItem(a0));\n            } catch (e) {\n                throw new ReferenceError(a0 + ' is not defined in this storage');\n            }\n            // Parse next levels and remove value\n            for (i = 1; i < l - 1; i++) {\n                tmp = tmp[a[i]];\n                if (tmp === undefined) {\n                    throw new ReferenceError([].slice.call(a, 1, i).join('.') + ' is not defined in this storage');\n                }\n            }\n            // If last argument is an array,remove value for each item in this array\n            // Else remove value normally\n            if (Array.isArray(a[i])) {\n                for (j in a[i]) {\n                    if (a[i].hasOwnProperty(j)) {\n                        delete tmp[a[i][j]];\n                    }\n                }\n            } else {\n                delete tmp[a[i]];\n            }\n            s.setItem(a0, JSON.stringify(to_store));\n            return true;\n        }\n    }\n\n    // Remove all items from a storage\n    function _removeAll(reinit_ns) {\n        var keys = _keys.call(this), i;\n        for (i in keys) {\n            if (keys.hasOwnProperty(i)) {\n                _remove.call(this, keys[i]);\n            }\n        }\n        // Reinitialize all namespace storages\n        if (reinit_ns) {\n            for (i in apis.namespaceStorages) {\n                if (apis.namespaceStorages.hasOwnProperty(i)) {\n                    _createNamespace(i);\n                }\n            }\n        }\n    }\n\n    // Check if items of a storage are empty\n    function _isEmpty() {\n        var l = arguments.length, a = arguments, a0 = a[0], i;\n        if (l == 0) {\n            // If no argument, test if storage is empty\n            return (_keys.call(this).length == 0);\n        } else if (Array.isArray(a0)) {\n            // If first argument is an array, test each item of this array and return true only if all items are empty\n            for (i = 0; i < a0.length; i++) {\n                if (!_isEmpty.call(this, a0[i])) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            // If at least 1 argument, try to get value and test it\n            try {\n                var v = _get.apply(this, arguments);\n                // Convert result to an object (if last argument is an array, _get return already an object) and test each item\n                if (!Array.isArray(a[l - 1])) {\n                    v = {'totest': v};\n                }\n                for (i in v) {\n                    if (v.hasOwnProperty(i) && !(\n                        (_isPlainObject(v[i]) && _isEmptyObject(v[i])) ||\n                        (Array.isArray(v[i]) && !v[i].length) ||\n                        (typeof v[i] !== 'boolean' && !v[i])\n                    )) {\n                        return false;\n                    }\n                }\n                return true;\n            } catch (e) {\n                return true;\n            }\n        }\n    }\n\n    // Check if items of a storage exist\n    function _isSet() {\n        var l = arguments.length, a = arguments, a0 = a[0], i;\n        if (l < 1) {\n            throw new Error('Minimum 1 argument must be given');\n        }\n        if (Array.isArray(a0)) {\n            // If first argument is an array, test each item of this array and return true only if all items exist\n            for (i = 0; i < a0.length; i++) {\n                if (!_isSet.call(this, a0[i])) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            // For other case, try to get value and test it\n            try {\n                var v = _get.apply(this, arguments);\n                // Convert result to an object (if last argument is an array, _get return already an object) and test each item\n                if (!Array.isArray(a[l - 1])) {\n                    v = {'totest': v};\n                }\n                for (i in v) {\n                    if (v.hasOwnProperty(i) && !(v[i] !== undefined && v[i] !== null)) {\n                        return false;\n                    }\n                }\n                return true;\n            } catch (e) {\n                return false;\n            }\n        }\n    }\n\n    // Get keys of a storage or of an item of the storage\n    function _keys() {\n        var storage = this._type, l = arguments.length, s = window[storage], keys = [], o = {};\n        // If at least 1 argument, get value from storage to retrieve keys\n        // Else, use storage to retrieve keys\n        if (l > 0) {\n            o = _get.apply(this, arguments);\n        } else {\n            o = s;\n        }\n        if (o && o._cookie) {\n            // If storage is a cookie, use js-cookie to retrieve keys\n            var cookies = Cookies.get();\n            for (var key in cookies) {\n                if (cookies.hasOwnProperty(key) && key != '') {\n                    keys.push(key.replace(o._prefix, ''));\n                }\n            }\n        } else {\n            for (var i in o) {\n                if (o.hasOwnProperty(i)) {\n                    keys.push(i);\n                }\n            }\n        }\n        return keys;\n    }\n\n    // Create new namespace storage\n    function _createNamespace(name) {\n        if (!name || typeof name != \"string\") {\n            throw new Error('First parameter must be a string');\n        }\n        if (storage_available) {\n            if (!window.localStorage.getItem(name)) {\n                window.localStorage.setItem(name, '{}');\n            }\n            if (!window.sessionStorage.getItem(name)) {\n                window.sessionStorage.setItem(name, '{}');\n            }\n        } else {\n            if (!window.localCookieStorage.getItem(name)) {\n                window.localCookieStorage.setItem(name, '{}');\n            }\n            if (!window.sessionCookieStorage.getItem(name)) {\n                window.sessionCookieStorage.setItem(name, '{}');\n            }\n        }\n        var ns = {\n            localStorage: _extend({}, apis.localStorage, {_ns: name}),\n            sessionStorage: _extend({}, apis.sessionStorage, {_ns: name})\n        };\n        if (cookies_available) {\n            if (!window.cookieStorage.getItem(name)) {\n                window.cookieStorage.setItem(name, '{}');\n            }\n            ns.cookieStorage = _extend({}, apis.cookieStorage, {_ns: name});\n        }\n        apis.namespaceStorages[name] = ns;\n        return ns;\n    }\n\n    // Test if storage is natively available on browser\n    function _testStorage(name) {\n        var foo = 'jsapi';\n        try {\n            if (!window[name]) {\n                return false;\n            }\n            window[name].setItem(foo, foo);\n            window[name].removeItem(foo);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    // Test if a variable is a plain object (from jQuery)\n    function _isPlainObject(obj) {\n        var proto, Ctor;\n\n        // Detect obvious negatives\n        // Use toString instead of jQuery.type to catch host objects\n        if (!obj || toString.call(obj) !== \"[object Object]\") {\n            return false;\n        }\n\n        proto = getProto(obj);\n\n        // Objects with no prototype (e.g., `Object.create( null )`) are plain\n        if (!proto) {\n            return true;\n        }\n\n        // Objects with prototype are plain iff they were constructed by a global Object function\n        Ctor = hasOwn.call(proto, \"constructor\") && proto.constructor;\n        return typeof Ctor === \"function\" && fnToString.call(Ctor) === ObjectFunctionString;\n    }\n\n    // Test if a variable is an empty object (from jQuery)\n    function _isEmptyObject(obj) {\n        var name;\n\n        for (name in obj) {\n            return false;\n        }\n        return true;\n    }\n\n    // Merge objects\n    function _extend() {\n        var i = 1;\n        var result = arguments[0];\n        for (; i < arguments.length; i++) {\n            var attributes = arguments[i];\n            for (var key in attributes) {\n                if (attributes.hasOwnProperty(key)) {\n                    result[key] = attributes[key];\n                }\n            }\n        }\n        return result;\n    }\n\n    // Check if storages are natively available on browser and check is js-cookie is present\n    var storage_available = _testStorage('localStorage');\n    var cookies_available = typeof Cookies !== 'undefined';\n\n    // Namespace object\n    var storage = {\n        _type: '',\n        _ns: '',\n        _callMethod: function (f, a) {\n            a = Array.prototype.slice.call(a);\n            var p = [], a0 = a[0];\n            if (this._ns) {\n                p.push(this._ns);\n            }\n            if (typeof a0 === 'string' && a0.indexOf('.') !== -1) {\n                a.shift();\n                [].unshift.apply(a, a0.split('.'));\n            }\n            [].push.apply(p, a);\n            return f.apply(this, p);\n        },\n        // Define if plugin always use JSON to store values (even to store simple values like string, int...) or not\n        alwaysUseJson: false,\n        // Get items. If no parameters and storage have a namespace, return all namespace\n        get: function () {\n            if (!storage_available && !cookies_available){\n                return null;\n            }\n            return this._callMethod(_get, arguments);\n        },\n        // Set items\n        set: function () {\n            var l = arguments.length, a = arguments, a0 = a[0];\n            if (l < 1 || !_isPlainObject(a0) && l < 2) {\n                throw new Error('Minimum 2 arguments must be given or first parameter must be an object');\n            }\n            if (!storage_available && !cookies_available){\n                return null;\n            }\n            // If first argument is an object and storage is a namespace storage, set values individually\n            if (_isPlainObject(a0) && this._ns) {\n                for (var i in a0) {\n                    if (a0.hasOwnProperty(i)) {\n                        this._callMethod(_set, [i, a0[i]]);\n                    }\n                }\n                return a0;\n            } else {\n                var r = this._callMethod(_set, a);\n                if (this._ns) {\n                    return r[a0.split('.')[0]];\n                } else {\n                    return r;\n                }\n            }\n        },\n        // Delete items\n        remove: function () {\n            if (arguments.length < 1) {\n                throw new Error('Minimum 1 argument must be given');\n            }\n            if (!storage_available && !cookies_available){\n                return null;\n            }\n            return this._callMethod(_remove, arguments);\n        },\n        // Delete all items\n        removeAll: function (reinit_ns) {\n            if (!storage_available && !cookies_available){\n                return null;\n            }\n            if (this._ns) {\n                this._callMethod(_set, [{}]);\n                return true;\n            } else {\n                return this._callMethod(_removeAll, [reinit_ns]);\n            }\n        },\n        // Items empty\n        isEmpty: function () {\n            if (!storage_available && !cookies_available){\n                return null;\n            }\n            return this._callMethod(_isEmpty, arguments);\n        },\n        // Items exists\n        isSet: function () {\n            if (arguments.length < 1) {\n                throw new Error('Minimum 1 argument must be given');\n            }\n            if (!storage_available && !cookies_available){\n                return null;\n            }\n            return this._callMethod(_isSet, arguments);\n        },\n        // Get keys of items\n        keys: function () {\n            if (!storage_available && !cookies_available){\n                return null;\n            }\n            return this._callMethod(_keys, arguments);\n        }\n    };\n\n    // Use js-cookie for compatibility with old browsers and give access to cookieStorage\n    if (cookies_available) {\n        // sessionStorage is valid for one window/tab. To simulate that with cookie, we set a name for the window and use it for the name of the cookie\n        if (!window.name) {\n            window.name = Math.floor(Math.random() * 100000000);\n        }\n        var cookie_storage = {\n            _cookie: true,\n            _prefix: '',\n            _expires: null,\n            _path: null,\n            _domain: null,\n            _secure: false,\n            setItem: function (n, v) {\n                Cookies.set(this._prefix + n, v, {expires: this._expires, path: this._path, domain: this._domain, secure: this._secure});\n            },\n            getItem: function (n) {\n                return Cookies.get(this._prefix + n);\n            },\n            removeItem: function (n) {\n                return Cookies.remove(this._prefix + n, {path: this._path});\n            },\n            clear: function () {\n                var cookies = Cookies.get();\n                for (var key in cookies) {\n                    if (cookies.hasOwnProperty(key) && key != '') {\n                        if (!this._prefix && key.indexOf(cookie_local_prefix) === -1 && key.indexOf(cookie_session_prefix) === -1 || this._prefix && key.indexOf(this._prefix) === 0) {\n                            Cookies.remove(key);\n                        }\n                    }\n                }\n            },\n            setExpires: function (e) {\n                this._expires = e;\n                return this;\n            },\n            setPath: function (p) {\n                this._path = p;\n                return this;\n            },\n            setDomain: function (d) {\n                this._domain = d;\n                return this;\n            },\n            setSecure: function (s) {\n                this._secure = s;\n                return this;\n            },\n            setConf: function (c) {\n                if (c.path) {\n                    this._path = c.path;\n                }\n                if (c.domain) {\n                    this._domain = c.domain;\n                }\n                if (c.secure) {\n                    this._secure = c.secure;\n                }\n                if (c.expires) {\n                    this._expires = c.expires;\n                }\n                return this;\n            },\n            setDefaultConf: function () {\n                this._path = this._domain = this._expires = null;\n                this._secure = false;\n            }\n        };\n        if (!storage_available) {\n            window.localCookieStorage = _extend({}, cookie_storage, {\n                _prefix: cookie_local_prefix,\n                _expires: 365 * 10,\n                _secure: true\n            });\n            window.sessionCookieStorage = _extend({}, cookie_storage, {\n                _prefix: cookie_session_prefix + window.name + '_',\n                _secure: true\n            });\n        }\n        window.cookieStorage = _extend({}, cookie_storage);\n        // cookieStorage API\n        apis.cookieStorage = _extend({}, storage, {\n            _type: 'cookieStorage',\n            setExpires: function (e) {\n                window.cookieStorage.setExpires(e);\n                return this;\n            },\n            setPath: function (p) {\n                window.cookieStorage.setPath(p);\n                return this;\n            },\n            setDomain: function (d) {\n                window.cookieStorage.setDomain(d);\n                return this;\n            },\n            setSecure: function (s) {\n                window.cookieStorage.setSecure(s);\n                return this;\n            },\n            setConf: function (c) {\n                window.cookieStorage.setConf(c);\n                return this;\n            },\n            setDefaultConf: function () {\n                window.cookieStorage.setDefaultConf();\n                return this;\n            }\n        });\n    }\n\n    // Get a new API on a namespace\n    apis.initNamespaceStorage = function (ns) {\n        return _createNamespace(ns);\n    };\n    if (storage_available) {\n        // localStorage API\n        apis.localStorage = _extend({}, storage, {_type: 'localStorage'});\n        // sessionStorage API\n        apis.sessionStorage = _extend({}, storage, {_type: 'sessionStorage'});\n    } else {\n        // localStorage API\n        apis.localStorage = _extend({}, storage, {_type: 'localCookieStorage'});\n        // sessionStorage API\n        apis.sessionStorage = _extend({}, storage, {_type: 'sessionCookieStorage'});\n    }\n    // List of all namespace storage\n    apis.namespaceStorages = {};\n    // Remove all items in all storages\n    apis.removeAllStorages = function (reinit_ns) {\n        apis.localStorage.removeAll(reinit_ns);\n        apis.sessionStorage.removeAll(reinit_ns);\n        if (apis.cookieStorage) {\n            apis.cookieStorage.removeAll(reinit_ns);\n        }\n        if (!reinit_ns) {\n            apis.namespaceStorages = {};\n        }\n    };\n    // About alwaysUseJson\n    // By default, all values are string on html storages and the plugin don't use json to store simple values (strings, int, float...)\n    // So by default, if you do storage.setItem('test',2), value in storage will be \"2\", not 2\n    // If you set this property to true, all values set with the plugin will be stored as json to have typed values in any cases\n    apis.alwaysUseJsonInStorage = function (value) {\n        storage.alwaysUseJson = value;\n        apis.localStorage.alwaysUseJson = value;\n        apis.sessionStorage.alwaysUseJson = value;\n        if (apis.cookieStorage) {\n            apis.cookieStorage.alwaysUseJson = value;\n        }\n    };\n\n    return apis;\n}));\n","js-storage/storage-wrapper.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'js-storage/js.storage'\n], function ($, storage) {\n    'use strict';\n\n    if (window.cookieStorage) {\n        var cookiesConfig = window.cookiesConfig || {};\n\n        $.extend(window.cookieStorage, {\n            _secure: !!cookiesConfig.secure,\n            _samesite: cookiesConfig.samesite ? cookiesConfig.samesite : 'lax',\n\n            /**\n             * Set value under name\n             * @param {String} name\n             * @param {String} value\n             * @param {Object} [options]\n             */\n            setItem: function (name, value, options) {\n                var _default = {\n                    expires: this._expires,\n                    path: this._path,\n                    domain: this._domain,\n                    secure: this._secure,\n                    samesite: this._samesite\n                };\n\n                $.cookie(this._prefix + name, value, $.extend(_default, options || {}));\n            },\n\n            /**\n             * Set default options\n             * @param {Object} c\n             * @returns {storage}\n             */\n            setConf: function (c) {\n                if (c.path) {\n                    this._path = c.path;\n                }\n\n                if (c.domain) {\n                    this._domain = c.domain;\n                }\n\n                if (c.expires) {\n                    this._expires = c.expires;\n                }\n\n                if (typeof c.secure !== 'undefined') {\n                    this._secure = c.secure;\n                }\n\n                if (typeof c.samesite !== 'undefined') {\n                    this._samesite = c.samesite;\n                }\n\n                return this;\n            }\n        });\n    }\n\n    $.alwaysUseJsonInStorage = $.alwaysUseJsonInStorage || storage.alwaysUseJsonInStorage;\n    $.cookieStorage = $.cookieStorage || storage.cookieStorage;\n    $.initNamespaceStorage = $.initNamespaceStorage || storage.initNamespaceStorage;\n    $.localStorage = $.localStorage || storage.localStorage;\n    $.namespaceStorages = $.namespaceStorages || storage.namespaceStorages;\n    $.removeAllStorages = $.removeAllStorages || storage.removeAllStorages;\n    $.sessionStorage = $.sessionStorage || storage.sessionStorage;\n});\n","Magento_SalesRule/js/form/element/coupon-type.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'underscore',\n    'uiRegistry',\n    'Magento_Ui/js/form/element/select'\n], function (_, uiRegistry, select) {\n    'use strict';\n\n    return select.extend({\n\n        /**\n         * Hide fields on coupon tab\n         */\n        onUpdate: function () {\n\n            /* eslint-disable eqeqeq */\n            if (this.value() != this.displayOnlyForCouponType) {\n                uiRegistry.get('sales_rule_form.sales_rule_form.rule_information.use_auto_generation').checked(false);\n            }\n\n            this.enableDisableFields();\n        },\n\n        /**\n         * Enable/disable fields on Coupons tab\n         */\n        enableDisableFields: function () {\n            var selector,\n                isUseAutoGenerationChecked,\n                couponType,\n                disableAuto;\n\n            selector = '[id=sales-rule-form-tab-coupons] input, [id=sales-rule-form-tab-coupons] select, ' +\n                    '[id=sales-rule-form-tab-coupons] button';\n            isUseAutoGenerationChecked = uiRegistry\n                    .get('sales_rule_form.sales_rule_form.rule_information.use_auto_generation')\n                    .checked();\n            couponType = uiRegistry\n                .get('sales_rule_form.sales_rule_form.rule_information.coupon_type')\n                .value();\n            disableAuto = couponType === 3 || isUseAutoGenerationChecked;\n            _.each(\n                document.querySelectorAll(selector),\n                function (element) {\n                    element.disabled = !disableAuto;\n                }\n            );\n        }\n    });\n});\n","Magento_SalesRule/js/form/element/apply_to_shipping.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'Magento_Ui/js/form/element/single-checkbox-toggle-notice'\n], function (Checkbox) {\n    'use strict';\n\n    return Checkbox.extend({\n        defaults: {\n            imports: {\n                toggleDisabled: '${ $.parentName }.simple_action:value'\n            }\n        },\n\n        /**\n         * Toggle element disabled state according to simple action value.\n         *\n         * @param {String} action\n         */\n        toggleDisabled: function (action) {\n            switch (action) {\n                default:\n                    this.disabled(false);\n            }\n\n            if (this.disabled()) {\n                this.checked(false);\n            }\n        }\n    });\n});\n","Magento_SalesRule/js/form/element/manage-coupon-codes.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'underscore',\n    'uiRegistry',\n    'Magento_Ui/js/form/components/fieldset',\n    'Magento_Ui/js/lib/view/utils/async'\n], function (_, uiRegistry, fieldset, async) {\n    'use strict';\n\n    return fieldset.extend({\n\n        /*eslint-disable no-unused-vars*/\n        /**\n         * Initialize element\n         *\n         * @returns {Abstract} Chainable\n         */\n        initialize: function (elems, position) {\n            var obj = this;\n\n            this._super();\n\n            async.async('#sales-rule-form-tab-coupons', document.getElementById('container'), function (node) {\n                var useAutoGeneration = uiRegistry.get(\n                    'sales_rule_form.sales_rule_form.rule_information.use_auto_generation'\n                );\n\n                useAutoGeneration.on('checked', function () {\n                    obj.enableDisableFields();\n                });\n                obj.enableDisableFields();\n            });\n\n            return this;\n        },\n\n        /*eslint-enable no-unused-vars*/\n        /*eslint-disable lines-around-comment*/\n\n        /**\n         * Enable/disable fields on Coupons tab\n         */\n        enableDisableFields: function () {\n            var selector,\n                isUseAutoGenerationChecked,\n                couponType,\n                disableAuto;\n\n            selector = '[id=sales-rule-form-tab-coupons] input, [id=sales-rule-form-tab-coupons] select, ' +\n                    '[id=sales-rule-form-tab-coupons] button';\n            isUseAutoGenerationChecked = uiRegistry\n                    .get('sales_rule_form.sales_rule_form.rule_information.use_auto_generation')\n                    .checked();\n            couponType = uiRegistry\n                .get('sales_rule_form.sales_rule_form.rule_information.coupon_type')\n                .value();\n            /**\n             * \\Magento\\Rule\\Model\\AbstractModel::COUPON_TYPE_AUTO\n             */\n            disableAuto = couponType === 3 || isUseAutoGenerationChecked;\n            _.each(\n                document.querySelectorAll(selector),\n                function (element) {\n                    element.disabled = !disableAuto;\n                }\n            );\n        }\n    });\n});\n","Magento_InventoryAdminUi/js/stock/grid/cell/assigned-sources.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'Magento_Ui/js/grid/columns/column'\n], function (Column) {\n    'use strict';\n\n    return Column.extend({\n        defaults: {\n            bodyTmpl: 'Magento_InventoryAdminUi/stock/grid/cell/assigned-sources-cell.html',\n            itemsToDisplay: 5\n        },\n\n        /**\n         *\n         * @param {Array} record\n         * @returns {Array}\n         */\n        getTooltipData: function (record) {\n            return record[this.index].map(function (source) {\n                return {\n                    sourceCode: source.sourceCode,\n                    name: source.name\n                };\n            });\n        },\n\n        /**\n         * @param {Object} record - Record object\n         * @returns {Array} Result array\n         */\n        getSourcesAssignedToStockOrderedByPriority: function (record) {\n            return this.getTooltipData(record).slice(0, this.itemsToDisplay);\n        }\n    });\n});\n","Magento_InventoryAdminUi/js/stock/grid/dynamic-rows/assigned-sources.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'underscore',\n    'Magento_Ui/js/dynamic-rows/dynamic-rows-grid'\n], function (_, dynamicRowsGrid) {\n    'use strict';\n\n    return dynamicRowsGrid.extend({\n        defaults: {\n            cacheGridDataIndex: []\n        },\n\n        /**\n         * Performance optimization of setting initial property to records data of only first page\n         *\n         * @returns {Object} Chainable.\n         */\n        setInitialProperty: function () {\n            var startIndex,\n                stopIndex;\n\n            if (_.isArray(this.recordData())) {\n                startIndex = (~~this.currentPage() - 1) * this.pageSize;\n                stopIndex = startIndex + parseInt(this.pageSize, 10);\n                this.recordData.each(function (data, index) {\n                    if (index < stopIndex) {\n                        this.source.set(this.dataScope + '.' + this.index + '.' + index + '.initialize', true);\n                    }\n                }, this);\n            }\n\n            return this;\n        },\n\n        /**\n         * Performance optimization of checking changed records\n         * skip when checks are not necessary\n         *\n         * @param {Array} data - array with records data\n         * @returns {Array} Changed records\n         */\n        _checkGridData: function (data) {\n            var cacheLength = this.cacheGridData.length,\n                curData = data.length,\n                changes = [],\n                dataIndex = [],\n                changesIndex = [];\n\n            if (cacheLength === curData || cacheLength > curData) {\n                return [];\n            }\n\n            if (!cacheLength) {\n                return data;\n            }\n            data.forEach(function (record, index) {\n                dataIndex[index] = record[this.map[this.identificationDRProperty]];\n            }, this);\n            changesIndex = _.difference(dataIndex, this.cacheGridDataIndex);\n            changesIndex.forEach(function (changeIndex) {\n                data.forEach(function (record, index) {\n                    if (changeIndex === record[this.map[this.identificationDRProperty]]) {\n                        changes.push(data[index]);\n                    }\n                }, this);\n            }, this);\n\n            return changes;\n        },\n\n        /**\n         * Performance optimization of processing insert data\n         *\n         * @param {Object} data\n         */\n        processingInsertData: function (data) {\n            this._super(data);\n            data.forEach(function (record, index) {\n                this.cacheGridDataIndex[index] = record[this.map[this.identificationDRProperty]];\n            }, this);\n        }\n    });\n});\n","Magento_InventoryAdminUi/js/form/element/region.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'Magento_Ui/js/form/element/region'\n], function (Region) {\n    'use strict';\n\n    return Region.extend({\n        defaults: {\n            regionScope: 'data.general.region'\n        },\n\n        /**\n         * Set region to source form\n         *\n         * @param {String} value - region\n         */\n        setDifferedFromDefault: function (value) {\n            this._super();\n\n            if (parseFloat(value)) {\n                this.source.set(this.regionScope, this.indexedOptions[value].label);\n            }\n        }\n    });\n});\n","Magento_Translation/js/i18n-config.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n(function () {\n    'use strict';\n\n    require.config({\n        config: {\n            'Magento_Ui/js/lib/knockout/bindings/i18n': {\n                inlineTranslation: true\n            }\n        }\n    });\n})();\n","Magento_Translation/js/mage-translation-dictionary.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'text!js-translation.json'\n], function (dict) {\n    'use strict';\n\n    return JSON.parse(dict);\n});\n","Magento_Rule/rules.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n * @api\n */\n\ndefine([\n    'jquery',\n    'Magento_Ui/js/modal/alert',\n    'mage/translate',\n    'prototype'\n], function (jQuery) {\n    'use strict';\n\n    var VarienRulesForm = new Class.create();\n\n    VarienRulesForm.prototype = {\n        initialize: function (parent, newChildUrl) {\n            this.parent = $(parent);\n            this.newChildUrl  = newChildUrl;\n            this.shownElement = null;\n            this.updateElement = null;\n            this.chooserSelectedItems = $H({});\n            this.readOnly = false;\n\n            var elems = this.parent.getElementsByClassName('rule-param');\n\n            for (var i = 0; i < elems.length; i++) {\n                this.initParam(elems[i]);\n            }\n        },\n\n        setReadonly: function (readonly) {\n            this.readOnly = readonly;\n            var elems = this.parent.getElementsByClassName('rule-param-remove');\n\n            for (var i = 0; i < elems.length; i++) {\n                var element = elems[i];\n\n                if (this.readOnly) {\n                    element.hide();\n                } else {\n                    element.show();\n                }\n            }\n\n            var elems = this.parent.getElementsByClassName('rule-param-new-child');\n\n            for (var i = 0; i < elems.length; i++) {\n                var element = elems[i];\n\n                if (this.readOnly) {\n                    element.hide();\n                } else {\n                    element.show();\n                }\n            }\n\n            var elems = this.parent.getElementsByClassName('rule-param');\n\n            for (var i = 0; i < elems.length; i++) {\n                var container = elems[i];\n                var label = Element.down(container, '.label');\n\n                if (label) {\n                    if (this.readOnly) {\n                        label.addClassName('label-disabled');\n                    } else {\n                        label.removeClassName('label-disabled');\n                    }\n                }\n            }\n        },\n\n        initParam: function (container) {\n            container.rulesObject = this;\n            var label = Element.down(container, '.label');\n\n            if (label) {\n                Event.observe(label, 'click', this.showParamInputField.bind(this, container));\n            }\n\n            var elem = Element.down(container, '.element');\n\n            if (elem) {\n                var trig = elem.down('.rule-chooser-trigger');\n\n                if (trig) {\n                    Event.observe(trig, 'click', this.toggleChooser.bind(this, container));\n                }\n\n                var apply = elem.down('.rule-param-apply');\n\n                if (apply) {\n                    Event.observe(apply, 'click', this.hideParamInputField.bind(this, container));\n                } else {\n                    elem = elem.down('.element-value-changer');\n                    elem.container = container;\n\n                    if (!elem.multiple) {\n                        Event.observe(elem, 'change', this.hideParamInputField.bind(this, container));\n\n                        this.changeVisibilityForValueRuleParam(elem);\n\n                    }\n                    Event.observe(elem, 'blur', this.hideParamInputField.bind(this, container));\n                }\n            }\n\n            var remove = Element.down(container, '.rule-param-remove');\n\n            if (remove) {\n                Event.observe(remove, 'click', this.removeRuleEntry.bind(this, container));\n            }\n        },\n\n        showChooserElement: function (chooser) {\n            this.chooserSelectedItems = $H({});\n\n            if (chooser.hasClassName('no-split')) {\n                this.chooserSelectedItems.set(this.updateElement.value, 1);\n            } else {\n                var values = this.updateElement.value.split(','),\n s = '';\n\n                for (var i = 0; i < values.length; i++) {\n                    s = values[i].strip();\n\n                    if (s != '') {\n                        this.chooserSelectedItems.set(s, 1);\n                    }\n                }\n            }\n            new Ajax.Request(chooser.getAttribute('url'), {\n                evalScripts: true,\n                parameters: {\n                    'form_key': FORM_KEY, 'selected[]': this.chooserSelectedItems.keys()\n                },\n                onSuccess: function (transport) {\n                    if (this._processSuccess(transport)) {\n                        jQuery(chooser).html(transport.responseText);\n                        this.showChooserLoaded(chooser, transport);\n                        jQuery(chooser).trigger('contentUpdated');\n                    }\n                }.bind(this),\n                onFailure: this._processFailure.bind(this)\n            });\n        },\n\n        showChooserLoaded: function (chooser, transport) {\n            chooser.style.display = 'block';\n        },\n\n        showChooser: function (container, event) {\n            var chooser = container.up('li');\n\n            if (!chooser) {\n                return;\n            }\n            chooser = chooser.down('.rule-chooser');\n\n            if (!chooser) {\n                return;\n            }\n            this.showChooserElement(chooser);\n        },\n\n        hideChooser: function (container, event) {\n            var chooser = container.up('li');\n\n            if (!chooser) {\n                return;\n            }\n            chooser = chooser.down('.rule-chooser');\n\n            if (!chooser) {\n                return;\n            }\n            chooser.style.display = 'none';\n        },\n\n        toggleChooser: function (container, event) {\n            if (this.readOnly) {\n                return false;\n            }\n\n            var chooser = container.up('li').down('.rule-chooser');\n\n            if (!chooser) {\n                return;\n            }\n\n            if (chooser.style.display == 'block') {\n                chooser.style.display = 'none';\n                this.cleanChooser(container, event);\n            } else {\n                this.showChooserElement(chooser);\n            }\n        },\n\n        cleanChooser: function (container, event) {\n            var chooser = container.up('li').down('.rule-chooser');\n\n            if (!chooser) {\n                return;\n            }\n            chooser.innerHTML = '';\n        },\n\n        showParamInputField: function (container, event) {\n            if (this.readOnly) {\n                return false;\n            }\n\n            if (this.shownElement) {\n                this.hideParamInputField(this.shownElement, event);\n            }\n\n            Element.addClassName(container, 'rule-param-edit');\n            var elemContainer = Element.down(container, '.element');\n\n            var elem = Element.down(elemContainer, 'input.input-text');\n\n            jQuery(elem).trigger('contentUpdated');\n\n            if (elem) {\n                elem.focus();\n\n                if (elem && elem.id && elem.id.match(/__value$/)) {\n                    this.updateElement = elem;\n                }\n\n            }\n\n            var elem = Element.down(elemContainer, '.element-value-changer');\n\n            if (elem) {\n                elem.focus();\n            }\n\n            this.shownElement = container;\n        },\n\n        hideParamInputField: function (container, event) {\n            Element.removeClassName(container, 'rule-param-edit');\n            var label = Element.down(container, '.label'),\n elem;\n\n            if (!container.hasClassName('rule-param-new-child')) {\n                elem = Element.down(container, '.element-value-changer');\n\n                if (elem && elem.options) {\n                    var selectedOptions = [];\n\n                    for (var i = 0; i < elem.options.length; i++) {\n                        if (elem.options[i].selected) {\n                            selectedOptions.push(elem.options[i].text);\n                        }\n                    }\n\n                    var str = selectedOptions.join(', ');\n\n                    label.innerHTML = str != '' ? str : '...';\n                }\n\n                this.changeVisibilityForValueRuleParam(elem);\n\n                elem = Element.down(container, 'input.input-text');\n\n                if (elem) {\n                    var str = elem.value.replace(/(^\\s+|\\s+$)/g, '');\n\n                    elem.value = str;\n\n                    if (str == '') {\n                        str = '...';\n                    } else if (str.length > 30) {\n                        str = str.substr(0, 30) + '...';\n                    }\n                    label.innerHTML = str.escapeHTML();\n                }\n            } else {\n                elem = container.down('.element-value-changer');\n\n                if (elem.value) {\n                    this.addRuleNewChild(elem);\n                }\n                elem.value = '';\n            }\n\n            if (elem && elem.id && elem.id.match(/__value$/)) {\n                this.hideChooser(container, event);\n                this.updateElement = null;\n            }\n\n            this.shownElement = null;\n        },\n\n        changeVisibilityForValueRuleParam: function(elem) {\n            var parsedElementId = elem.id.split('__');\n            if (parsedElementId[2] !== 'operator') {\n                return false;\n            }\n\n            var valueElement = jQuery('#' + parsedElementId[0] + '__' + parsedElementId[1] + '__value');\n\n            if(elem.value === '<=>') {\n                valueElement.closest('.rule-param').hide();\n            } else {\n                valueElement.closest('.rule-param').show();\n            }\n\n            return true;\n        },\n\n        addRuleNewChild: function (elem) {\n            var parent_id = elem.id.replace(/^.*__(.*)__.*$/, '$1');\n            var children_ul_id = elem.id.replace(/__/g, ':').replace(/[^:]*$/, 'children').replace(/:/g, '__');\n            var children_ul = $(this.parent).select('#' + children_ul_id)[0];\n            var max_id = 0,\n i;\n            var children_inputs = Selector.findChildElements(children_ul, $A(['input.hidden']));\n\n            if (children_inputs.length) {\n                children_inputs.each(function (el) {\n                    if (el.id.match(/__type$/)) {\n                        i = 1 * el.id.replace(/^.*__.*?([0-9]+)__.*$/, '$1');\n                        max_id = i > max_id ? i : max_id;\n                    }\n                });\n            }\n            var new_id = parent_id + '--' + (max_id + 1);\n            var new_type = elem.value;\n            var new_elem = document.createElement('LI');\n\n            new_elem.className = 'rule-param-wait';\n            new_elem.innerHTML = jQuery.mage.__('This won\\'t take long . . .');\n            children_ul.insertBefore(new_elem, $(elem).up('li'));\n\n            new Ajax.Request(this.newChildUrl, {\n                evalScripts: true,\n                parameters: {\n                    form_key: FORM_KEY, type: new_type.replace('/', '-'), id: new_id\n                },\n                onComplete: this.onAddNewChildComplete.bind(this, new_elem),\n                onSuccess: function (transport) {\n                    if (this._processSuccess(transport)) {\n                        $(new_elem).update(transport.responseText);\n                    }\n                }.bind(this),\n                onFailure: this._processFailure.bind(this)\n            });\n        },\n\n        _processSuccess: function (transport) {\n            if (transport.responseText.isJSON()) {\n                var response = transport.responseText.evalJSON();\n\n                if (response.error) {\n                    alert(response.message);\n                }\n\n                if (response.ajaxExpired && response.ajaxRedirect) {\n                    setLocation(response.ajaxRedirect);\n                }\n\n                return false;\n            }\n\n            return true;\n        },\n\n        _processFailure: function (transport) {\n            location.href = BASE_URL;\n        },\n\n        onAddNewChildComplete: function (new_elem) {\n            if (this.readOnly) {\n                return false;\n            }\n\n            $(new_elem).removeClassName('rule-param-wait');\n            var elems = new_elem.getElementsByClassName('rule-param');\n\n            for (var i = 0; i < elems.length; i++) {\n                this.initParam(elems[i]);\n            }\n        },\n\n        removeRuleEntry: function (container, event) {\n            var li = Element.up(container, 'li');\n\n            li.parentNode.removeChild(li);\n        },\n\n        chooserGridInit: function (grid) {\n            //grid.reloadParams = {'selected[]':this.chooserSelectedItems.keys()};\n        },\n\n        chooserGridRowInit: function (grid, row) {\n            if (!grid.reloadParams) {\n                grid.reloadParams = {\n                    'selected[]': this.chooserSelectedItems.keys()\n                };\n            }\n        },\n\n        chooserGridRowClick: function (grid, event) {\n            var trElement = Event.findElement(event, 'tr');\n            var isInput = Event.element(event).tagName == 'INPUT';\n\n            if (trElement) {\n                var checkbox = Element.select(trElement, 'input');\n\n                if (checkbox[0]) {\n                    var checked = isInput ? checkbox[0].checked : !checkbox[0].checked;\n\n                    grid.setCheckboxChecked(checkbox[0], checked);\n\n                }\n            }\n        },\n\n        chooserGridCheckboxCheck: function (grid, element, checked) {\n            if (checked) {\n                if (!element.up('th')) {\n                    this.chooserSelectedItems.set(element.value, 1);\n                }\n            } else {\n                this.chooserSelectedItems.unset(element.value);\n            }\n            grid.reloadParams = {\n                'selected[]': this.chooserSelectedItems.keys()\n            };\n            this.updateElement.value = this.chooserSelectedItems.keys().join(', ');\n        }\n    };\n\n    return VarienRulesForm;\n});\n","Magento_Rule/conditions-data-normalizer.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'underscore'\n], function ($, _) {\n    'use strict';\n\n    /**\n     * @constructor\n     */\n    var ConditionsDataNormalizer = function () {\n        this.patterns = {\n            validate: /^[a-z0-9_.-][a-z0-9_.-]*(?:\\[(?:\\d*|[a-z0-9_.-]+)\\])*$/i,\n            key: /[a-z0-9_.-]+|(?=\\[\\])/gi,\n            push: /^$/,\n            fixed: /^\\d+$/,\n            named: /^[a-z0-9_.-]+$/i\n        };\n    };\n\n    ConditionsDataNormalizer.prototype = {\n        /**\n         * Will convert an object:\n         * {\n         *   \"foo[bar][1][baz]\": 123,\n         *   \"foo[bar][1][blah]\": 321\n         *   \"foo[bar][1--1][ah]\": 456\n         * }\n         *\n         * to\n         * {\n         *   \"foo\": {\n         *     \"bar\": {\n         *       \"1\": {\n         *         \"baz\": 123,\n         *         \"blah\": 321\n         *       },\n         *       \"1--1\": {\n         *         \"ah\": 456\n         *       }\n         *     }\n         *   }\n         * }\n         */\n        normalize: function normalize(value) {\n            var el, _this = this;\n\n            this.pushes = {};\n            this.data = {};\n\n            _.each(value, function (e, i) {\n                el = {};\n                el[i] = e;\n\n                _this._addPair({\n                    name: i,\n                    value: e\n                });\n            });\n\n            return this.data;\n        },\n\n        /**\n         * @param {Object} base\n         * @param {String} key\n         * @param {String} value\n         * @return {Object}\n         * @private\n         */\n        _build: function build(base, key, value) {\n            base[key] = value;\n\n            return base;\n        },\n\n        /**\n         * @param {Object} root\n         * @param {String} value\n         * @return {*}\n         * @private\n         */\n        _makeObject: function makeObject(root, value) {\n            var keys = root.match(this.patterns.key),\n                k, idx; // nest, nest, ..., nest\n\n            while ((k = keys.pop()) !== undefined) {\n                // foo[]\n                if (this.patterns.push.test(k)) {\n                    idx = this._incrementPush(root.replace(/\\[\\]$/, ''));\n                    value = this._build([], idx, value);\n                } // foo[n]\n                else if (this.patterns.fixed.test(k)) {\n                    value = this._build({}, k, value);\n                } // foo; foo[bar]\n                else if (this.patterns.named.test(k)) {\n                    value = this._build({}, k, value);\n                }\n            }\n\n            return value;\n        },\n\n        /**\n         * @param {String} key\n         * @return {Number}\n         * @private\n         */\n        _incrementPush: function incrementPush(key) {\n            if (this.pushes[key] === undefined) {\n                this.pushes[key] = 0;\n            }\n\n            return this.pushes[key]++;\n        },\n\n        /**\n         * @param {Object} pair\n         * @return {Object}\n         * @private\n         */\n        _addPair: function addPair(pair) {\n            var obj = this._makeObject(pair.name, pair.value);\n\n            if (!this.patterns.validate.test(pair.name)) {\n                return this;\n            }\n\n            this.data = $.extend(true, this.data, obj);\n\n            return this;\n        }\n    };\n\n    return ConditionsDataNormalizer;\n});\n","Magento_Email/js/variables.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/* global Variables, updateElementAtCursor */\ndefine([\n    'jquery',\n    'mage/translate',\n    'Magento_Ui/js/modal/modal',\n    'jquery/ui',\n    'prototype'\n], function (jQuery, $t) {\n    'use strict';\n\n    window.Variables = {\n        textareaElementId: null,\n        variablesContent: null,\n        dialogWindow: null,\n        dialogWindowId: 'variables-chooser',\n        overlayShowEffectOptions: null,\n        overlayHideEffectOptions: null,\n        insertFunction: 'Variables.insertVariable',\n        variablesValue: [],\n\n        /**\n         * @param {*} textareaElementId\n         * @param {Function} insertFunction\n         */\n        init: function (textareaElementId, insertFunction) {\n            if ($(textareaElementId)) {\n                this.textareaElementId = textareaElementId;\n            }\n\n            if (insertFunction) {\n                this.insertFunction = insertFunction;\n            }\n        },\n\n        /**\n         * reset data.\n         */\n        resetData: function () {\n            this.variablesContent = null;\n            this.dialogWindow = null;\n        },\n\n        /**\n         * @param {Object} variables\n         */\n        openVariableChooser: function (variables) {\n            if (this.variablesContent == null && variables) {\n                this.variablesContent = '<ul class=\"insert-variable\">';\n                variables.each(function (variableGroup) {\n                    if (variableGroup.label && variableGroup.value) {\n                        this.variablesContent += '<li><b>' + variableGroup.label.escapeHTML() + '</b></li>';\n                        variableGroup.value.each(function (variable) {\n                            if (variable.value && variable.label) {\n                                this.variablesValue.push(variable.value);\n                                this.variablesContent += '<li>' +\n                                    this.prepareVariableRow(this.variablesValue.length, variable.label) + '</li>';\n                            }\n                        }.bind(this));\n                    }\n                }.bind(this));\n                this.variablesContent += '</ul>';\n            }\n\n            if (this.variablesContent) {\n                this.openDialogWindow(this.variablesContent);\n            }\n        },\n\n        /**\n         * @param {*} variablesContent\n         */\n        openDialogWindow: function (variablesContent) {\n            var windowId = this.dialogWindowId;\n\n            jQuery('<div id=\"' + windowId + '\">' + variablesContent + '</div>').modal({\n                title: $t('Insert Variable...'),\n                type: 'slide',\n                buttons: [],\n\n                /** @inheritdoc */\n                closed: function (e, modal) {\n                    modal.modal.remove();\n                }\n            });\n\n            jQuery('#' + windowId).modal('openModal');\n        },\n\n        /**\n         * Close dialog window.\n         */\n        closeDialogWindow: function () {\n            jQuery('#' + this.dialogWindowId).modal('closeModal');\n        },\n\n        /**\n         * @param {Number} index\n         * @param {*} varLabel\n         * @return {String}\n         */\n        prepareVariableRow: function (index, varLabel) {\n            return '<a href=\"#\" onclick=\"' +\n                this.insertFunction +\n                '(' +\n                index +\n                ');return false;\">' +\n                varLabel.escapeHTML() +\n                '</a>';\n        },\n\n        /**\n         * @param {*} variable\n         */\n        insertVariable: function (variable) {\n            var windowId = this.dialogWindowId,\n                textareaElm, scrollPos;\n\n            jQuery('#' + windowId).modal('closeModal');\n            textareaElm = $(this.textareaElementId);\n\n            if (textareaElm) {\n                scrollPos = textareaElm.scrollTop;\n\n                if (!isNaN(variable)) {\n                    updateElementAtCursor(textareaElm, Variables.variablesValue[variable - 1]);\n                } else {\n                    updateElementAtCursor(textareaElm, variable);\n                }\n                textareaElm.focus();\n                textareaElm.scrollTop = scrollPos;\n                jQuery(textareaElm).trigger('change');\n                textareaElm = null;\n            }\n        }\n    };\n\n    window.MagentovariablePlugin = {\n        editor: null,\n        variables: null,\n        textareaId: null,\n\n        /**\n         * @param {*} editor\n         */\n        setEditor: function (editor) {\n            this.editor = editor;\n        },\n\n        /**\n         * @param {String} url\n         * @param {*} textareaId\n         */\n        loadChooser: function (url, textareaId) {\n            this.textareaId = textareaId;\n\n            if (this.variables == null) {\n                new Ajax.Request(url, {\n                    parameters: {},\n                    onComplete: function (transport) {\n                        if (transport.responseText.isJSON()) {\n                            Variables.init(null, 'MagentovariablePlugin.insertVariable');\n                            this.variables = transport.responseText.evalJSON();\n                            this.openChooser(this.variables);\n                        }\n                    }.bind(this)\n                });\n            } else {\n                this.openChooser(this.variables);\n            }\n        },\n\n        /**\n         * @param {*} variables\n         */\n        openChooser: function (variables) {\n            Variables.openVariableChooser(variables);\n        },\n\n        /**\n         * @param {*} value\n         */\n        insertVariable: function (value) {\n            if (this.textareaId) {\n                Variables.init(this.textareaId);\n                Variables.insertVariable(value);\n            } else {\n                Variables.closeDialogWindow();\n                this.editor.execCommand('mceInsertContent', false, value);\n            }\n        }\n    };\n});\n"}
}});
